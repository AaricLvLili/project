// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class guildwar_guildactorscores extends Sproto.SprotoTypeBase {
		
		public actorid: number; // tag 0
		public score: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorid = this.de.ri ();
					break;
				case 1:
					this.score = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 0);
			}

			if (this.score != undefined) {
				this.se.wi (this.score, 1);
			}

			return this.se.Close ();
		}
	}


	export class guildwar_redpacket_getinfo extends Sproto.SprotoTypeBase {
		
		public yuanbao: number; // tag 0
		public actorid: number; // tag 1
		public actorname: string; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.yuanbao = this.de.ri ();
					break;
				case 1:
					this.actorid = this.de.ri ();
					break;
				case 2:
					this.actorname = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.yuanbao != undefined) {
				this.se.wi (this.yuanbao, 0);
			}

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 1);
			}

			if (this.actorname != undefined) {
				this.se.ws (this.actorname, 2);
			}

			return this.se.Close ();
		}
	}


	export class guildwar_scoreinfo extends Sproto.SprotoTypeBase {
		
		public guildname: string; // tag 0
		public actorname: string; // tag 1
		public score: number; // tag 2
		public serverid: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.guildname = this.de.rs ();
					break;
				case 1:
					this.actorname = this.de.rs ();
					break;
				case 2:
					this.score = this.de.ri ();
					break;
				case 3:
					this.serverid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 0);
			}

			if (this.actorname != undefined) {
				this.se.ws (this.actorname, 1);
			}

			if (this.score != undefined) {
				this.se.wi (this.score, 2);
			}

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 3);
			}

			return this.se.Close ();
		}
	}


	export class kffz_info extends Sproto.SprotoTypeBase {
		
		public winguild: kffz_one; // tag 0
		public guildlist: kffz_one[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.winguild = this.de.ro(kffz_one);
					break;
				case 1:
					this.guildlist = this.de.roa(kffz_one);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.winguild != undefined) {
				this.se.wo (this.winguild, 0);
			}

			if (this.guildlist != undefined) {
				this.se.woa (this.guildlist, 1);
			}

			return this.se.Close ();
		}
	}


	export class kffz_one extends Sproto.SprotoTypeBase {
		
		public serverid: number; // tag 0
		public guildname: string; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.serverid = this.de.ri ();
					break;
				case 1:
					this.guildname = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 0);
			}

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 1);
			}

			return this.se.Close ();
		}
	}


	export class kfwin_record extends Sproto.SprotoTypeBase {
		
		public time: number; // tag 0
		public serverid: number; // tag 1
		public guildname: string; // tag 2
		public leadername: string; // tag 3
		public assistnames: string[]; // tag 4
		public leaderheadid: number; // tag 5
		public assistheadid: number[]; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.time = this.de.ri ();
					break;
				case 1:
					this.serverid = this.de.ri ();
					break;
				case 2:
					this.guildname = this.de.rs ();
					break;
				case 3:
					this.leadername = this.de.rs ();
					break;
				case 4:
					this.assistnames = this.de.rsa ();
					break;
				case 5:
					this.leaderheadid = this.de.ri ();
					break;
				case 6:
					this.assistheadid = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.time != undefined) {
				this.se.wi (this.time, 0);
			}

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 1);
			}

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 2);
			}

			if (this.leadername != undefined) {
				this.se.ws (this.leadername, 3);
			}

			if (this.assistnames != undefined) {
				this.se.wsa (this.assistnames, 4);
			}

			if (this.leaderheadid != undefined) {
				this.se.wi (this.leaderheadid, 5);
			}

			if (this.assistheadid != undefined) {
				this.se.wia (this.assistheadid, 6);
			}

			return this.se.Close ();
		}
	}


	export class my_guild_rank_info extends Sproto.SprotoTypeBase {
		
		public actorId: number; // tag 0
		public name: string; // tag 1
		public mapName: string; // tag 2
		public point: number; // tag 3
		public attr: number; // tag 4
		public office: number; // tag 5
		public job: number; // tag 6
		public sex: number; // tag 7
		public constructor(buffer: Uint8Array = null) {
			super(8, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorId = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.mapName = this.de.rs ();
					break;
				case 3:
					this.point = this.de.ri ();
					break;
				case 4:
					this.attr = this.de.ri ();
					break;
				case 5:
					this.office = this.de.ri ();
					break;
				case 6:
					this.job = this.de.ri ();
					break;
				case 7:
					this.sex = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorId != undefined) {
				this.se.wi (this.actorId, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.mapName != undefined) {
				this.se.ws (this.mapName, 2);
			}

			if (this.point != undefined) {
				this.se.wi (this.point, 3);
			}

			if (this.attr != undefined) {
				this.se.wi (this.attr, 4);
			}

			if (this.office != undefined) {
				this.se.wi (this.office, 5);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 6);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 7);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_actor_scores_request extends Sproto.SprotoTypeBase {
		
		public scores: guildwar_scoreinfo[]; // tag 0
		public type: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.scores = this.de.roa(guildwar_scoreinfo);
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.scores != undefined) {
				this.se.woa (this.scores, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_dayaward_info_request extends Sproto.SprotoTypeBase {
		
		public canGet: boolean; // tag 0
		public isGet: boolean; // tag 1
		public day: number; // tag 2
		public type: number; // tag 3
		public guildname: string; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.canGet = this.de.rb ();
					break;
				case 1:
					this.isGet = this.de.rb ();
					break;
				case 2:
					this.day = this.de.ri ();
					break;
				case 3:
					this.type = this.de.ri ();
					break;
				case 4:
					this.guildname = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.canGet != undefined) {
				this.se.wb (this.canGet, 0);
			}

			if (this.isGet != undefined) {
				this.se.wb (this.isGet, 1);
			}

			if (this.day != undefined) {
				this.se.wi (this.day, 2);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 3);
			}

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_disp_info_request extends Sproto.SprotoTypeBase {
		
		public guildrank: number; // tag 0
		public canDisp: boolean; // tag 1
		public scores: guildwar_guildactorscores[]; // tag 2
		public type: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.guildrank = this.de.ri ();
					break;
				case 1:
					this.canDisp = this.de.rb ();
					break;
				case 2:
					this.scores = this.de.roa(guildwar_guildactorscores);
					break;
				case 3:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.guildrank != undefined) {
				this.se.wi (this.guildrank, 0);
			}

			if (this.canDisp != undefined) {
				this.se.wb (this.canDisp, 1);
			}

			if (this.scores != undefined) {
				this.se.woa (this.scores, 2);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_disp_ret_request extends Sproto.SprotoTypeBase {
		
		public success: boolean; // tag 0
		public type: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.success = this.de.rb ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.success != undefined) {
				this.se.wb (this.success, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_firstwinner_awardinfo_request extends Sproto.SprotoTypeBase {
		
		public canAward: boolean; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.canAward = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.canAward != undefined) {
				this.se.wb (this.canAward, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_get_redpacket_ret_request extends Sproto.SprotoTypeBase {
		
		public success: boolean; // tag 0
		public type: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.success = this.de.rb ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.success != undefined) {
				this.se.wb (this.success, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_guild_rank_info_request extends Sproto.SprotoTypeBase {
		
		public datas: my_guild_rank_info[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.datas = this.de.roa(my_guild_rank_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.datas != undefined) {
				this.se.woa (this.datas, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_guild_scores_request extends Sproto.SprotoTypeBase {
		
		public scores: guildwar_scoreinfo[]; // tag 0
		public upGuildName: string; // tag 1
		public upReason: number; // tag 2
		public type: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.scores = this.de.roa(guildwar_scoreinfo);
					break;
				case 1:
					this.upGuildName = this.de.rs ();
					break;
				case 2:
					this.upReason = this.de.ri ();
					break;
				case 3:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.scores != undefined) {
				this.se.woa (this.scores, 0);
			}

			if (this.upGuildName != undefined) {
				this.se.ws (this.upGuildName, 1);
			}

			if (this.upReason != undefined) {
				this.se.wi (this.upReason, 2);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_kffz_info_request extends Sproto.SprotoTypeBase {
		
		public lists: kffz_info[]; // tag 0
		public infznumber: number; // tag 1
		public serverid: number; // tag 2
		public guildname: string; // tag 3
		public bestguildname: string; // tag 4
		public entitle: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.lists = this.de.roa(kffz_info);
					break;
				case 1:
					this.infznumber = this.de.ri ();
					break;
				case 2:
					this.serverid = this.de.ri ();
					break;
				case 3:
					this.guildname = this.de.rs ();
					break;
				case 4:
					this.bestguildname = this.de.rs ();
					break;
				case 5:
					this.entitle = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.lists != undefined) {
				this.se.woa (this.lists, 0);
			}

			if (this.infznumber != undefined) {
				this.se.wi (this.infznumber, 1);
			}

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 2);
			}

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 3);
			}

			if (this.bestguildname != undefined) {
				this.se.ws (this.bestguildname, 4);
			}

			if (this.entitle != undefined) {
				this.se.wi (this.entitle, 5);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_kfwin_records_request extends Sproto.SprotoTypeBase {
		
		public records: kfwin_record[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.records = this.de.roa(kfwin_record);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.records != undefined) {
				this.se.woa (this.records, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_redpacket_info_request extends Sproto.SprotoTypeBase {
		
		public sendYuanbao: number; // tag 0
		public canSend: boolean; // tag 1
		public canGet: boolean; // tag 2
		public allYuanbao: number; // tag 3
		public count: number; // tag 4
		public leftCount: number; // tag 5
		public getInfos: guildwar_redpacket_getinfo[]; // tag 6
		public endTime: number; // tag 7
		public maxcount: number; // tag 8
		public type: number; // tag 9
		public constructor(buffer: Uint8Array = null) {
			super(10, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.sendYuanbao = this.de.ri ();
					break;
				case 1:
					this.canSend = this.de.rb ();
					break;
				case 2:
					this.canGet = this.de.rb ();
					break;
				case 3:
					this.allYuanbao = this.de.ri ();
					break;
				case 4:
					this.count = this.de.ri ();
					break;
				case 5:
					this.leftCount = this.de.ri ();
					break;
				case 6:
					this.getInfos = this.de.roa(guildwar_redpacket_getinfo);
					break;
				case 7:
					this.endTime = this.de.ri ();
					break;
				case 8:
					this.maxcount = this.de.ri ();
					break;
				case 9:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.sendYuanbao != undefined) {
				this.se.wi (this.sendYuanbao, 0);
			}

			if (this.canSend != undefined) {
				this.se.wb (this.canSend, 1);
			}

			if (this.canGet != undefined) {
				this.se.wb (this.canGet, 2);
			}

			if (this.allYuanbao != undefined) {
				this.se.wi (this.allYuanbao, 3);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 4);
			}

			if (this.leftCount != undefined) {
				this.se.wi (this.leftCount, 5);
			}

			if (this.getInfos != undefined) {
				this.se.woa (this.getInfos, 6);
			}

			if (this.endTime != undefined) {
				this.se.wi (this.endTime, 7);
			}

			if (this.maxcount != undefined) {
				this.se.wi (this.maxcount, 8);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 9);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_send_redpacket_ret_request extends Sproto.SprotoTypeBase {
		
		public success: boolean; // tag 0
		public type: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.success = this.de.rb ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.success != undefined) {
				this.se.wb (this.success, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_winleader_request extends Sproto.SprotoTypeBase {
		
		public leadername: string; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.leadername = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.leadername != undefined) {
				this.se.ws (this.leadername, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_winner_request extends Sproto.SprotoTypeBase {
		
		public guildname: string; // tag 0
		public type: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.guildname = this.de.rs ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guildwar_winner_info_request extends Sproto.SprotoTypeBase {
		
		public guildid: number; // tag 0
		public guildname: string; // tag 1
		public leadername: string; // tag 2
		public leaderid: number; // tag 3
		public leaderinfo: rank_subrole; // tag 4
		public assistname: string[]; // tag 5
		public assistinfo: rank_subrole[]; // tag 6
		public type: number; // tag 7
		public serverid: number; // tag 8
		public constructor(buffer: Uint8Array = null) {
			super(9, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.guildid = this.de.ri ();
					break;
				case 1:
					this.guildname = this.de.rs ();
					break;
				case 2:
					this.leadername = this.de.rs ();
					break;
				case 3:
					this.leaderid = this.de.ri ();
					break;
				case 4:
					this.leaderinfo = this.de.ro(rank_subrole);
					break;
				case 5:
					this.assistname = this.de.rsa ();
					break;
				case 6:
					this.assistinfo = this.de.roa(rank_subrole);
					break;
				case 7:
					this.type = this.de.ri ();
					break;
				case 8:
					this.serverid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.guildid != undefined) {
				this.se.wi (this.guildid, 0);
			}

			if (this.guildname != undefined) {
				this.se.ws (this.guildname, 1);
			}

			if (this.leadername != undefined) {
				this.se.ws (this.leadername, 2);
			}

			if (this.leaderid != undefined) {
				this.se.wi (this.leaderid, 3);
			}

			if (this.leaderinfo != undefined) {
				this.se.wo (this.leaderinfo, 4);
			}

			if (this.assistname != undefined) {
				this.se.wsa (this.assistname, 5);
			}

			if (this.assistinfo != undefined) {
				this.se.woa (this.assistinfo, 6);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 7);
			}

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 8);
			}

			return this.se.Close ();
		}
	}


}

