// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_pet_activate_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_attach_init_req_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class cs_pet_attach_req_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public petid: number; // tag 1
		public slot: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.petid = this.de.ri ();
					break;
				case 2:
					this.slot = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.petid != undefined) {
				this.se.wi (this.petid, 1);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 2);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_attach_unlock_req_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_compose_req_request extends Sproto.SprotoTypeBase {
		
		public itemid: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.itemid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_init_req_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class cs_pet_pack_req_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class cs_pet_rename_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public name: string; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_setfight_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public roleid: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				case 1:
					this.roleid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_skillup_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public isAuto: boolean; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				case 1:
					this.isAuto = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			if (this.isAuto != undefined) {
				this.se.wb (this.isAuto, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_smelt_req_request extends Sproto.SprotoTypeBase {
		
		public handler: number; // tag 0
		public num: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handler = this.de.ri ();
					break;
				case 1:
					this.num = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handler != undefined) {
				this.se.wi (this.handler, 0);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_uplevel_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public isAuto: boolean; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				case 1:
					this.isAuto = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			if (this.isAuto != undefined) {
				this.se.wb (this.isAuto, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_upstar_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_wake_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_wash_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public isAuto: boolean; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				case 1:
					this.isAuto = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			if (this.isAuto != undefined) {
				this.se.wb (this.isAuto, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_washlock_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public skillid: number; // tag 1
		public status: boolean; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				case 1:
					this.skillid = this.de.ri ();
					break;
				case 2:
					this.status = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			if (this.skillid != undefined) {
				this.se.wi (this.skillid, 1);
			}

			if (this.status != undefined) {
				this.se.wb (this.status, 2);
			}

			return this.se.Close ();
		}
	}


	export class cs_pet_washrep_req_request extends Sproto.SprotoTypeBase {
		
		public petid: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.petid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.petid != undefined) {
				this.se.wi (this.petid, 0);
			}

			return this.se.Close ();
		}
	}


}

