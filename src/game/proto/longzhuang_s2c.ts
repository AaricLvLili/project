// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_longzhuang_boost_ret_request extends Sproto.SprotoTypeBase {
		
		public roleId: number; // tag 0
		public id: number; // tag 1
		public star: number; // tag 2
		public exp: number; // tag 3
		public crit: number; // tag 4
		public addExp: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleId = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.star = this.de.ri ();
					break;
				case 3:
					this.exp = this.de.ri ();
					break;
				case 4:
					this.crit = this.de.ri ();
					break;
				case 5:
					this.addExp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleId != undefined) {
				this.se.wi (this.roleId, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 2);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 3);
			}

			if (this.crit != undefined) {
				this.se.wi (this.crit, 4);
			}

			if (this.addExp != undefined) {
				this.se.wi (this.addExp, 5);
			}

			return this.se.Close ();
		}
	}


	export class sc_longzhuang_upgrade_ret_request extends Sproto.SprotoTypeBase {
		
		public roleId: number; // tag 0
		public id: number; // tag 1
		public lv: number; // tag 2
		public star: number; // tag 3
		public exp: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleId = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.lv = this.de.ri ();
					break;
				case 3:
					this.star = this.de.ri ();
					break;
				case 4:
					this.exp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleId != undefined) {
				this.se.wi (this.roleId, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 2);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 3);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 4);
			}

			return this.se.Close ();
		}
	}


}

