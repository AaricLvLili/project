// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class guild_boss_rank_data extends Sproto.SprotoTypeBase {
		
		public dbid: number; // tag 0
		public name: string; // tag 1
		public head: number; // tag 2
		public value: number; // tag 3
		public office: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.dbid = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.head = this.de.ri ();
					break;
				case 3:
					this.value = this.de.ri ();
					break;
				case 4:
					this.office = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.dbid != undefined) {
				this.se.wi (this.dbid, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.head != undefined) {
				this.se.wi (this.head, 2);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 3);
			}

			if (this.office != undefined) {
				this.se.wi (this.office, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_boss_call_info_request extends Sproto.SprotoTypeBase {
		
		public callerId: number; // tag 0
		public callName: string; // tag 1
		public callOffice: number; // tag 2
		public callHead: number; // tag 3
		public hpPercent: number; // tag 4
		public rankDatas: guild_boss_rank_data[]; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.callerId = this.de.ri ();
					break;
				case 1:
					this.callName = this.de.rs ();
					break;
				case 2:
					this.callOffice = this.de.ri ();
					break;
				case 3:
					this.callHead = this.de.ri ();
					break;
				case 4:
					this.hpPercent = this.de.ri ();
					break;
				case 5:
					this.rankDatas = this.de.roa(guild_boss_rank_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.callerId != undefined) {
				this.se.wi (this.callerId, 0);
			}

			if (this.callName != undefined) {
				this.se.ws (this.callName, 1);
			}

			if (this.callOffice != undefined) {
				this.se.wi (this.callOffice, 2);
			}

			if (this.callHead != undefined) {
				this.se.wi (this.callHead, 3);
			}

			if (this.hpPercent != undefined) {
				this.se.wi (this.hpPercent, 4);
			}

			if (this.rankDatas != undefined) {
				this.se.woa (this.rankDatas, 5);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_boss_cd_request extends Sproto.SprotoTypeBase {
		
		public cdtime: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.cdtime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.cdtime != undefined) {
				this.se.wi (this.cdtime, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_boss_info_request extends Sproto.SprotoTypeBase {
		
		public callNum: number; // tag 0
		public time: number; // tag 1
		public index: number; // tag 2
		public level: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.callNum = this.de.ri ();
					break;
				case 1:
					this.time = this.de.ri ();
					break;
				case 2:
					this.index = this.de.ri ();
					break;
				case 3:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.callNum != undefined) {
				this.se.wi (this.callNum, 0);
			}

			if (this.time != undefined) {
				this.se.wi (this.time, 1);
			}

			if (this.index != undefined) {
				this.se.wi (this.index, 2);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_boss_rewards_request extends Sproto.SprotoTypeBase {
		
		public result: boolean; // tag 0
		public myRank: number; // tag 1
		public myHurt: number; // tag 2
		public firstId: number; // tag 3
		public firstHurt: number; // tag 4
		public furstname: string; // tag 5
		public rewards: reward_data[]; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.rb ();
					break;
				case 1:
					this.myRank = this.de.ri ();
					break;
				case 2:
					this.myHurt = this.de.ri ();
					break;
				case 3:
					this.firstId = this.de.ri ();
					break;
				case 4:
					this.firstHurt = this.de.ri ();
					break;
				case 5:
					this.furstname = this.de.rs ();
					break;
				case 6:
					this.rewards = this.de.roa(reward_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wb (this.result, 0);
			}

			if (this.myRank != undefined) {
				this.se.wi (this.myRank, 1);
			}

			if (this.myHurt != undefined) {
				this.se.wi (this.myHurt, 2);
			}

			if (this.firstId != undefined) {
				this.se.wi (this.firstId, 3);
			}

			if (this.firstHurt != undefined) {
				this.se.wi (this.firstHurt, 4);
			}

			if (this.furstname != undefined) {
				this.se.ws (this.furstname, 5);
			}

			if (this.rewards != undefined) {
				this.se.woa (this.rewards, 6);
			}

			return this.se.Close ();
		}
	}


}

