// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class guild_raid_rank extends Sproto.SprotoTypeBase {
		
		public rank: number; // tag 0
		public stage: number; // tag 1
		public name: string; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.rank = this.de.ri ();
					break;
				case 1:
					this.stage = this.de.ri ();
					break;
				case 2:
					this.name = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.rank != undefined) {
				this.se.wi (this.rank, 0);
			}

			if (this.stage != undefined) {
				this.se.wi (this.stage, 1);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 2);
			}

			return this.se.Close ();
		}
	}


	export class guild_robber extends Sproto.SprotoTypeBase {
		
		public pos: number; // tag 0
		public status: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.pos = this.de.ri ();
					break;
				case 1:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.pos != undefined) {
				this.se.wi (this.pos, 0);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_actor_info_request extends Sproto.SprotoTypeBase {
		
		public stage: number; // tag 0
		public sweep: boolean; // tag 1
		public reward: boolean; // tag 2
		public boost: boolean; // tag 3
		public number: number; // tag 4
		public times: number; // tag 5
		public wave: number; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.stage = this.de.ri ();
					break;
				case 1:
					this.sweep = this.de.rb ();
					break;
				case 2:
					this.reward = this.de.rb ();
					break;
				case 3:
					this.boost = this.de.rb ();
					break;
				case 4:
					this.number = this.de.ri ();
					break;
				case 5:
					this.times = this.de.ri ();
					break;
				case 6:
					this.wave = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.stage != undefined) {
				this.se.wi (this.stage, 0);
			}

			if (this.sweep != undefined) {
				this.se.wb (this.sweep, 1);
			}

			if (this.reward != undefined) {
				this.se.wb (this.reward, 2);
			}

			if (this.boost != undefined) {
				this.se.wb (this.boost, 3);
			}

			if (this.number != undefined) {
				this.se.wi (this.number, 4);
			}

			if (this.times != undefined) {
				this.se.wi (this.times, 5);
			}

			if (this.wave != undefined) {
				this.se.wi (this.wave, 6);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_overtime_request extends Sproto.SprotoTypeBase {
		
		public stage: number; // tag 0
		public time: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.stage = this.de.ri ();
					break;
				case 1:
					this.time = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.stage != undefined) {
				this.se.wi (this.stage, 0);
			}

			if (this.time != undefined) {
				this.se.wi (this.time, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_ranklist_request extends Sproto.SprotoTypeBase {
		
		public ranks: guild_raid_rank[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.ranks = this.de.roa(guild_raid_rank);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.ranks != undefined) {
				this.se.woa (this.ranks, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_ranktop_request extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public stage: number; // tag 1
		public boost: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.stage = this.de.ri ();
					break;
				case 2:
					this.boost = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.stage != undefined) {
				this.se.wi (this.stage, 1);
			}

			if (this.boost != undefined) {
				this.se.wi (this.boost, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_reward_pro_request extends Sproto.SprotoTypeBase {
		
		public value: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.value != undefined) {
				this.se.wi (this.value, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_stagerank_request extends Sproto.SprotoTypeBase {
		
		public ranks: guild_raid_rank[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.ranks = this.de.roa(guild_raid_rank);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.ranks != undefined) {
				this.se.woa (this.ranks, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_starttime_request extends Sproto.SprotoTypeBase {
		
		public stage: number; // tag 0
		public time: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.stage = this.de.ri ();
					break;
				case 1:
					this.time = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.stage != undefined) {
				this.se.wi (this.stage, 0);
			}

			if (this.time != undefined) {
				this.se.wi (this.time, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_raid_waveover_request extends Sproto.SprotoTypeBase {
		
		public wave: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.wave = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.wave != undefined) {
				this.se.wi (this.wave, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_robber_actor_info_request extends Sproto.SprotoTypeBase {
		
		public times: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.times = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.times != undefined) {
				this.se.wi (this.times, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_robber_info_request extends Sproto.SprotoTypeBase {
		
		public robbers: guild_robber[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.robbers = this.de.roa(guild_robber);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.robbers != undefined) {
				this.se.woa (this.robbers, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_robber_notice_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public str: string; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.str = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.str != undefined) {
				this.se.ws (this.str, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_robber_update_request extends Sproto.SprotoTypeBase {
		
		public pos: number; // tag 0
		public status: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.pos = this.de.ri ();
					break;
				case 1:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.pos != undefined) {
				this.se.wi (this.pos, 0);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 1);
			}

			return this.se.Close ();
		}
	}


}

