// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class mail_data extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public title: string; // tag 1
		public times: number; // tag 2
		public type: number; // tag 3
		public receive: number; // tag 4
		public mailtype: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.title = this.de.rs ();
					break;
				case 2:
					this.times = this.de.ri ();
					break;
				case 3:
					this.type = this.de.ri ();
					break;
				case 4:
					this.receive = this.de.ri ();
					break;
				case 5:
					this.mailtype = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.title != undefined) {
				this.se.ws (this.title, 1);
			}

			if (this.times != undefined) {
				this.se.wi (this.times, 2);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 3);
			}

			if (this.receive != undefined) {
				this.se.wi (this.receive, 4);
			}

			if (this.mailtype != undefined) {
				this.se.wi (this.mailtype, 5);
			}

			return this.se.Close ();
		}
	}


	export class mail_update_data extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public type: number; // tag 1
		public receive: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				case 2:
					this.receive = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			if (this.receive != undefined) {
				this.se.wi (this.receive, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_mail_add_info_request extends Sproto.SprotoTypeBase {
		
		public mailData: mail_data; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.mailData = this.de.ro(mail_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.mailData != undefined) {
				this.se.wo (this.mailData, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_mail_delete_request extends Sproto.SprotoTypeBase {
		
		public handle: number[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wia (this.handle, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_mail_detailed_info_request extends Sproto.SprotoTypeBase {
		
		public mailData: mail_data; // tag 0
		public text: string; // tag 1
		public rewardData: reward_data[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.mailData = this.de.ro(mail_data);
					break;
				case 1:
					this.text = this.de.rs ();
					break;
				case 2:
					this.rewardData = this.de.roa(reward_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.mailData != undefined) {
				this.se.wo (this.mailData, 0);
			}

			if (this.text != undefined) {
				this.se.ws (this.text, 1);
			}

			if (this.rewardData != undefined) {
				this.se.woa (this.rewardData, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_mail_init_info_request extends Sproto.SprotoTypeBase {
		
		public mailData: mail_data[]; // tag 0
		public curPage: number; // tag 1
		public maxPage: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.mailData = this.de.roa(mail_data);
					break;
				case 1:
					this.curPage = this.de.ri ();
					break;
				case 2:
					this.maxPage = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.mailData != undefined) {
				this.se.woa (this.mailData, 0);
			}

			if (this.curPage != undefined) {
				this.se.wi (this.curPage, 1);
			}

			if (this.maxPage != undefined) {
				this.se.wi (this.maxPage, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_mail_red_point_request extends Sproto.SprotoTypeBase {
		
		public isHaveRedPoint: boolean; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.isHaveRedPoint = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.isHaveRedPoint != undefined) {
				this.se.wb (this.isHaveRedPoint, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_mail_update_info_request extends Sproto.SprotoTypeBase {
		
		public updateData: mail_update_data[]; // tag 0
		public showWarnBagSpace: boolean; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.updateData = this.de.roa(mail_update_data);
					break;
				case 1:
					this.showWarnBagSpace = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.updateData != undefined) {
				this.se.woa (this.updateData, 0);
			}

			if (this.showWarnBagSpace != undefined) {
				this.se.wb (this.showWarnBagSpace, 1);
			}

			return this.se.Close ();
		}
	}


}

