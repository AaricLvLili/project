// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class SoltList extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public lv: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.lv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_shapeshift_send_JoinInfo_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public shapeid: number; // tag 1
		public skills: number[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.shapeid = this.de.ri ();
					break;
				case 2:
					this.skills = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.shapeid != undefined) {
				this.se.wi (this.shapeid, 1);
			}

			if (this.skills != undefined) {
				this.se.wia (this.skills, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_shapeshift_send_info_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public joinId: number; // tag 1
		public shapes: shapeList[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.joinId = this.de.ri ();
					break;
				case 2:
					this.shapes = this.de.roa(shapeList);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.joinId != undefined) {
				this.se.wi (this.joinId, 1);
			}

			if (this.shapes != undefined) {
				this.se.woa (this.shapes, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_shapeshift_send_join_relute_request extends Sproto.SprotoTypeBase {
		
		public rolseId: number; // tag 0
		public shapeId: number; // tag 1
		public relute: number; // tag 2
		public state: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.rolseId = this.de.ri ();
					break;
				case 1:
					this.shapeId = this.de.ri ();
					break;
				case 2:
					this.relute = this.de.ri ();
					break;
				case 3:
					this.state = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.rolseId != undefined) {
				this.se.wi (this.rolseId, 0);
			}

			if (this.shapeId != undefined) {
				this.se.wi (this.shapeId, 1);
			}

			if (this.relute != undefined) {
				this.se.wi (this.relute, 2);
			}

			if (this.state != undefined) {
				this.se.wi (this.state, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_shapeshift_send_shapeInfo_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public shapeid: number; // tag 1
		public relute: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.shapeid = this.de.ri ();
					break;
				case 2:
					this.relute = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.shapeid != undefined) {
				this.se.wi (this.shapeid, 1);
			}

			if (this.relute != undefined) {
				this.se.wi (this.relute, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_shapeshift_send_skill_relute_request extends Sproto.SprotoTypeBase {
		
		public rolseId: number; // tag 0
		public shapeId: number; // tag 1
		public skillList: skillList[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.rolseId = this.de.ri ();
					break;
				case 1:
					this.shapeId = this.de.ri ();
					break;
				case 2:
					this.skillList = this.de.roa(skillList);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.rolseId != undefined) {
				this.se.wi (this.rolseId, 0);
			}

			if (this.shapeId != undefined) {
				this.se.wi (this.shapeId, 1);
			}

			if (this.skillList != undefined) {
				this.se.woa (this.skillList, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_shapeshift_send_upgrade_relute_request extends Sproto.SprotoTypeBase {
		
		public rolseId: number; // tag 0
		public shapeId: number; // tag 1
		public solteId: number; // tag 2
		public lv: number; // tag 3
		public Progress: number; // tag 4
		public state: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.rolseId = this.de.ri ();
					break;
				case 1:
					this.shapeId = this.de.ri ();
					break;
				case 2:
					this.solteId = this.de.ri ();
					break;
				case 3:
					this.lv = this.de.ri ();
					break;
				case 4:
					this.Progress = this.de.ri ();
					break;
				case 5:
					this.state = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.rolseId != undefined) {
				this.se.wi (this.rolseId, 0);
			}

			if (this.shapeId != undefined) {
				this.se.wi (this.shapeId, 1);
			}

			if (this.solteId != undefined) {
				this.se.wi (this.solteId, 2);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 3);
			}

			if (this.Progress != undefined) {
				this.se.wi (this.Progress, 4);
			}

			if (this.state != undefined) {
				this.se.wi (this.state, 5);
			}

			return this.se.Close ();
		}
	}


	export class sc_tendraw_send_drawcnt_relute_request extends Sproto.SprotoTypeBase {
		
		public drawCnt: number; // tag 0
		public type: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.drawCnt = this.de.ri ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.drawCnt != undefined) {
				this.se.wi (this.drawCnt, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_tendraw_send_reward_relute_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public drawDatas: tendraw_item[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.drawDatas = this.de.roa(tendraw_item);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.drawDatas != undefined) {
				this.se.woa (this.drawDatas, 1);
			}

			return this.se.Close ();
		}
	}


	export class shapeList extends Sproto.SprotoTypeBase {
		
		public state: number; // tag 0
		public id: number; // tag 1
		public Progress: number; // tag 2
		public SoltList: SoltList[]; // tag 3
		public skillList: number[]; // tag 4
		public JoinState: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.state = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.Progress = this.de.ri ();
					break;
				case 3:
					this.SoltList = this.de.roa(SoltList);
					break;
				case 4:
					this.skillList = this.de.ria ();
					break;
				case 5:
					this.JoinState = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.state != undefined) {
				this.se.wi (this.state, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.Progress != undefined) {
				this.se.wi (this.Progress, 2);
			}

			if (this.SoltList != undefined) {
				this.se.woa (this.SoltList, 3);
			}

			if (this.skillList != undefined) {
				this.se.wia (this.skillList, 4);
			}

			if (this.JoinState != undefined) {
				this.se.wi (this.JoinState, 5);
			}

			return this.se.Close ();
		}
	}


	export class skillList extends Sproto.SprotoTypeBase {
		
		public skillList: number[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.skillList = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.skillList != undefined) {
				this.se.wia (this.skillList, 0);
			}

			return this.se.Close ();
		}
	}


	export class tendraw_item extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public count: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			return this.se.Close ();
		}
	}


}

