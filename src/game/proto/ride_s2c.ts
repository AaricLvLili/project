// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class ride_data extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public level: number; // tag 1
		public exp: number; // tag 2
		public star: number; // tag 3
		public power: number; // tag 4
		public attr: attribute_data[]; // tag 5
		public skill: number[]; // tag 6
		public equipList: ride_equip[]; // tag 7
		public showLevel: number; // tag 8
		public constructor(buffer: Uint8Array = null) {
			super(9, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				case 2:
					this.exp = this.de.ri ();
					break;
				case 3:
					this.star = this.de.ri ();
					break;
				case 4:
					this.power = this.de.ri ();
					break;
				case 5:
					this.attr = this.de.roa(attribute_data);
					break;
				case 6:
					this.skill = this.de.ria ();
					break;
				case 7:
					this.equipList = this.de.roa(ride_equip);
					break;
				case 8:
					this.showLevel = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 2);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 3);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 4);
			}

			if (this.attr != undefined) {
				this.se.woa (this.attr, 5);
			}

			if (this.skill != undefined) {
				this.se.wia (this.skill, 6);
			}

			if (this.equipList != undefined) {
				this.se.woa (this.equipList, 7);
			}

			if (this.showLevel != undefined) {
				this.se.wi (this.showLevel, 8);
			}

			return this.se.Close ();
		}
	}


	export class ride_equip extends Sproto.SprotoTypeBase {
		
		public slot: number; // tag 0
		public itemid: number; // tag 1
		public level: number; // tag 2
		public star: number; // tag 3
		public attr: attribute_data[]; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.slot = this.de.ri ();
					break;
				case 1:
					this.itemid = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				case 3:
					this.star = this.de.ri ();
					break;
				case 4:
					this.attr = this.de.roa(attribute_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.slot != undefined) {
				this.se.wi (this.slot, 0);
			}

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 3);
			}

			if (this.attr != undefined) {
				this.se.woa (this.attr, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_change_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public showLevel: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.showLevel = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.showLevel != undefined) {
				this.se.wi (this.showLevel, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_eat_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public itemid: number; // tag 1
		public count: number; // tag 2
		public attr: attribute_data[]; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.itemid = this.de.ri ();
					break;
				case 2:
					this.count = this.de.ri ();
					break;
				case 3:
					this.attr = this.de.roa(attribute_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 1);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 2);
			}

			if (this.attr != undefined) {
				this.se.woa (this.attr, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_equip_uplevel_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public level: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_equip_upstar_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public star: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				case 2:
					this.star = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_equipchange_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public itemid: number; // tag 2
		public attr: attribute_data[]; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				case 2:
					this.itemid = this.de.ri ();
					break;
				case 3:
					this.attr = this.de.roa(attribute_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 2);
			}

			if (this.attr != undefined) {
				this.se.woa (this.attr, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_equipoff_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_getaward_res_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public status: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_init_res_request extends Sproto.SprotoTypeBase {
		
		public data: ride_data[]; // tag 0
		public achieve: number[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.roa(ride_data);
					break;
				case 1:
					this.achieve = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.woa (this.data, 0);
			}

			if (this.achieve != undefined) {
				this.se.wia (this.achieve, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_skillup_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public id: number; // tag 1
		public level: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_uplevel_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public level: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_ride_upstar_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public star: number; // tag 1
		public exp: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.exp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 2);
			}

			return this.se.Close ();
		}
	}


}

