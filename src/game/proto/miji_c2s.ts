// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_miji_fuben_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_miji_fuben_panel_info_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class cs_miji_fuben_quick_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public rate: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.rate = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.rate != undefined) {
				this.se.wi (this.rate, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_miji_fuben_reward_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public rate: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.rate = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.rate != undefined) {
				this.se.wi (this.rate, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_miji_reward_data_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class sc_miji_change_request extends Sproto.SprotoTypeBase {
		
		public mijiID: number; // tag 0
		public mijiID1: number; // tag 1
		public mijiID2: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.mijiID = this.de.ri ();
					break;
				case 1:
					this.mijiID1 = this.de.ri ();
					break;
				case 2:
					this.mijiID2 = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.mijiID != undefined) {
				this.se.wi (this.mijiID, 0);
			}

			if (this.mijiID1 != undefined) {
				this.se.wi (this.mijiID1, 1);
			}

			if (this.mijiID2 != undefined) {
				this.se.wi (this.mijiID2, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_learn_request extends Sproto.SprotoTypeBase {
		
		public roleID: number; // tag 0
		public mijiID: number; // tag 1
		public gridID: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleID = this.de.ri ();
					break;
				case 1:
					this.mijiID = this.de.ri ();
					break;
				case 2:
					this.gridID = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleID != undefined) {
				this.se.wi (this.roleID, 0);
			}

			if (this.mijiID != undefined) {
				this.se.wi (this.mijiID, 1);
			}

			if (this.gridID != undefined) {
				this.se.wi (this.gridID, 2);
			}

			return this.se.Close ();
		}
	}


}

