// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class dan_info extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public num: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.num = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 1);
			}

			return this.se.Close ();
		}
	}


	export class holygun_data extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public star: number; // tag 1
		public exp: number; // tag 2
		public scala: number; // tag 3
		public power: number; // tag 4
		public skill: skillinfo[]; // tag 6
		public danyao: dan_info[]; // tag 7
		public constructor(buffer: Uint8Array = null) {
			super(8, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.exp = this.de.ri ();
					break;
				case 3:
					this.scala = this.de.ri ();
					break;
				case 4:
					this.power = this.de.ri ();
					break;
				case 6:
					this.skill = this.de.roa(skillinfo);
					break;
				case 7:
					this.danyao = this.de.roa(dan_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 2);
			}

			if (this.scala != undefined) {
				this.se.wi (this.scala, 3);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 4);
			}

			if (this.skill != undefined) {
				this.se.woa (this.skill, 6);
			}

			if (this.danyao != undefined) {
				this.se.woa (this.danyao, 7);
			}

			return this.se.Close ();
		}
	}


	export class sc_holygun_achievement_request extends Sproto.SprotoTypeBase {
		
		public data: number[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.wia (this.data, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_holygun_eatdanyao_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public id: number; // tag 1
		public num: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.num = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_holygun_init_request extends Sproto.SprotoTypeBase {
		
		public data: holygun_data[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.roa(holygun_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.woa (this.data, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_holygun_upscala_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public scala: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.scala = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.scala != undefined) {
				this.se.wi (this.scala, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_holygun_upskill_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public id: number; // tag 1
		public level: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_holygun_upstar_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public star: number; // tag 1
		public exp: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.exp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 2);
			}

			return this.se.Close ();
		}
	}


	export class skillinfo extends Sproto.SprotoTypeBase {
		
		public skillid: number; // tag 0
		public level: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.skillid = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.skillid != undefined) {
				this.se.wi (this.skillid, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			return this.se.Close ();
		}
	}


}

