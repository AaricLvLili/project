// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_team_info_res_request extends Sproto.SprotoTypeBase {
		
		public teamid: number; // tag 0
		public name: string; // tag 1
		public captain: number; // tag 2
		public members: sc_team_info_res_request_team_member[]; // tag 3
		public groupid: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.teamid = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.captain = this.de.ri ();
					break;
				case 3:
					this.members = this.de.roa(sc_team_info_res_request_team_member);
					break;
				case 4:
					this.groupid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.teamid != undefined) {
				this.se.wi (this.teamid, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.captain != undefined) {
				this.se.wi (this.captain, 2);
			}

			if (this.members != undefined) {
				this.se.woa (this.members, 3);
			}

			if (this.groupid != undefined) {
				this.se.wi (this.groupid, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_team_info_res_request_team_member extends Sproto.SprotoTypeBase {
		
		public dbid: number; // tag 0
		public name: string; // tag 1
		public job: number; // tag 2
		public sex: number; // tag 3
		public level: number; // tag 4
		public zslevel: number; // tag 5
		public power: number; // tag 6
		public serverid: number; // tag 7
		public constructor(buffer: Uint8Array = null) {
			super(8, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.dbid = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.job = this.de.ri ();
					break;
				case 3:
					this.sex = this.de.ri ();
					break;
				case 4:
					this.level = this.de.ri ();
					break;
				case 5:
					this.zslevel = this.de.ri ();
					break;
				case 6:
					this.power = this.de.ri ();
					break;
				case 7:
					this.serverid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.dbid != undefined) {
				this.se.wi (this.dbid, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 2);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 3);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 4);
			}

			if (this.zslevel != undefined) {
				this.se.wi (this.zslevel, 5);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 6);
			}

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 7);
			}

			return this.se.Close ();
		}
	}


	export class sc_team_join_res_request extends Sproto.SprotoTypeBase {
		
		public result: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wi (this.result, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_team_my_res_request extends Sproto.SprotoTypeBase {
		
		public times: number; // tag 1
		public id: number; // tag 2
		public first: number[]; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 1:
					this.times = this.de.ri ();
					break;
				case 2:
					this.id = this.de.ri ();
					break;
				case 3:
					this.first = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.times != undefined) {
				this.se.wi (this.times, 1);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 2);
			}

			if (this.first != undefined) {
				this.se.wia (this.first, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_team_quit_res_request extends Sproto.SprotoTypeBase {
		
		public groupid: number; // tag 0
		public teamid: number; // tag 1
		public dbid: number; // tag 2
		public captain: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.groupid = this.de.ri ();
					break;
				case 1:
					this.teamid = this.de.ri ();
					break;
				case 2:
					this.dbid = this.de.ri ();
					break;
				case 3:
					this.captain = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.groupid != undefined) {
				this.se.wi (this.groupid, 0);
			}

			if (this.teamid != undefined) {
				this.se.wi (this.teamid, 1);
			}

			if (this.dbid != undefined) {
				this.se.wi (this.dbid, 2);
			}

			if (this.captain != undefined) {
				this.se.wi (this.captain, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_team_res_request extends Sproto.SprotoTypeBase {
		
		public groupid: number; // tag 0
		public list: sc_team_res_request_team_item[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.groupid = this.de.ri ();
					break;
				case 1:
					this.list = this.de.roa(sc_team_res_request_team_item);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.groupid != undefined) {
				this.se.wi (this.groupid, 0);
			}

			if (this.list != undefined) {
				this.se.woa (this.list, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_team_res_request_team_item extends Sproto.SprotoTypeBase {
		
		public teamid: number; // tag 0
		public name: string; // tag 1
		public job: number; // tag 2
		public sex: number; // tag 3
		public num: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.teamid = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.job = this.de.ri ();
					break;
				case 3:
					this.sex = this.de.ri ();
					break;
				case 4:
					this.num = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.teamid != undefined) {
				this.se.wi (this.teamid, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 2);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 3);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 4);
			}

			return this.se.Close ();
		}
	}


}

