// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class chat_data extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public id: number; // tag 1
		public name: string; // tag 2
		public job: number; // tag 4
		public sex: number; // tag 5
		public vip: number; // tag 6
		public monthCard: number; // tag 7
		public monthcard_super: number; // tag 8
		public ladderLevel: number; // tag 9
		public isFirst: number; // tag 10
		public pointId: number; // tag 11
		public str: string; // tag 12
		public isTeacher: boolean; // tag 13
		public time: number; // tag 14
		public groupid: number; // tag 15
		public teamid: number; // tag 16
		public constructor(buffer: Uint8Array = null) {
			super(17, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.name = this.de.rs ();
					break;
				case 4:
					this.job = this.de.ri ();
					break;
				case 5:
					this.sex = this.de.ri ();
					break;
				case 6:
					this.vip = this.de.ri ();
					break;
				case 7:
					this.monthCard = this.de.ri ();
					break;
				case 8:
					this.monthcard_super = this.de.ri ();
					break;
				case 9:
					this.ladderLevel = this.de.ri ();
					break;
				case 10:
					this.isFirst = this.de.ri ();
					break;
				case 11:
					this.pointId = this.de.ri ();
					break;
				case 12:
					this.str = this.de.rs ();
					break;
				case 13:
					this.isTeacher = this.de.rb ();
					break;
				case 14:
					this.time = this.de.ri ();
					break;
				case 15:
					this.groupid = this.de.ri ();
					break;
				case 16:
					this.teamid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 2);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 4);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 5);
			}

			if (this.vip != undefined) {
				this.se.wi (this.vip, 6);
			}

			if (this.monthCard != undefined) {
				this.se.wi (this.monthCard, 7);
			}

			if (this.monthcard_super != undefined) {
				this.se.wi (this.monthcard_super, 8);
			}

			if (this.ladderLevel != undefined) {
				this.se.wi (this.ladderLevel, 9);
			}

			if (this.isFirst != undefined) {
				this.se.wi (this.isFirst, 10);
			}

			if (this.pointId != undefined) {
				this.se.wi (this.pointId, 11);
			}

			if (this.str != undefined) {
				this.se.ws (this.str, 12);
			}

			if (this.isTeacher != undefined) {
				this.se.wb (this.isTeacher, 13);
			}

			if (this.time != undefined) {
				this.se.wi (this.time, 14);
			}

			if (this.groupid != undefined) {
				this.se.wi (this.groupid, 15);
			}

			if (this.teamid != undefined) {
				this.se.wi (this.teamid, 16);
			}

			return this.se.Close ();
		}
	}


	export class sc_chat_is_send_success_request extends Sproto.SprotoTypeBase {
		
		public success: boolean; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.success = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.success != undefined) {
				this.se.wb (this.success, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_chat_msg_delete_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_chat_new_msg_request extends Sproto.SprotoTypeBase {
		
		public chatData: chat_data; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.chatData = this.de.ro(chat_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.chatData != undefined) {
				this.se.wo (this.chatData, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_chat_system_message_request extends Sproto.SprotoTypeBase {
		
		public level: number; // tag 0
		public type: number; // tag 1
		public str: string; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.level = this.de.ri ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				case 2:
					this.str = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.level != undefined) {
				this.se.wi (this.level, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			if (this.str != undefined) {
				this.se.ws (this.str, 2);
			}

			return this.se.Close ();
		}
	}


}

