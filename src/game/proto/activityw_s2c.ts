// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class activityw_base_type extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public startTime: number; // tag 1
		public endTime: number; // tag 2
		public type: number; // tag 3
		public openState: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.startTime = this.de.ri ();
					break;
				case 2:
					this.endTime = this.de.ri ();
					break;
				case 3:
					this.type = this.de.ri ();
					break;
				case 4:
					this.openState = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.startTime != undefined) {
				this.se.wi (this.startTime, 1);
			}

			if (this.endTime != undefined) {
				this.se.wi (this.endTime, 2);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 3);
			}

			if (this.openState != undefined) {
				this.se.wi (this.openState, 4);
			}

			return this.se.Close ();
		}
	}


	export class dresshunt_item extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public count: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_activityw_dresshunt_ret_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public items: dresshunt_item[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.items = this.de.roa(dresshunt_item);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.items != undefined) {
				this.se.woa (this.items, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_activityw_update_info_request extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public status: number; // tag 1
		public today: number; // tag 2
		public count: number; // tag 3
		public personCounts: number[]; // tag 4
		public globalCounts: number[]; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.status = this.de.ri ();
					break;
				case 2:
					this.today = this.de.ri ();
					break;
				case 3:
					this.count = this.de.ri ();
					break;
				case 4:
					this.personCounts = this.de.ria ();
					break;
				case 5:
					this.globalCounts = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 1);
			}

			if (this.today != undefined) {
				this.se.wi (this.today, 2);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 3);
			}

			if (this.personCounts != undefined) {
				this.se.wia (this.personCounts, 4);
			}

			if (this.globalCounts != undefined) {
				this.se.wia (this.globalCounts, 5);
			}

			return this.se.Close ();
		}
	}


}

