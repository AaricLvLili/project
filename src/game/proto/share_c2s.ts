// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_operate_share_request extends Sproto.SprotoTypeBase {
		
		public actId: number; // tag 0
		public subProto: string; // tag 1
		public subData: sub_proto_data; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actId = this.de.ri ();
					break;
				case 1:
					this.subProto = this.de.rs ();
					break;
				case 2:
					this.subData = this.de.ro(sub_proto_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actId != undefined) {
				this.se.wi (this.actId, 0);
			}

			if (this.subProto != undefined) {
				this.se.ws (this.subProto, 1);
			}

			if (this.subData != undefined) {
				this.se.wo (this.subData, 2);
			}

			return this.se.Close ();
		}
	}


	export class cs_share_Help_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_share_event_request extends Sproto.SprotoTypeBase {
		
		public shareticket: string; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.shareticket = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.shareticket != undefined) {
				this.se.ws (this.shareticket, 0);
			}

			return this.se.Close ();
		}
	}


	export class sub_proto_data extends Sproto.SprotoTypeBase {
		
		public integer_data: number[]; // tag 0
		public string_data: string; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.integer_data = this.de.ria ();
					break;
				case 1:
					this.string_data = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.integer_data != undefined) {
				this.se.wia (this.integer_data, 0);
			}

			if (this.string_data != undefined) {
				this.se.ws (this.string_data, 1);
			}

			return this.se.Close ();
		}
	}


}

