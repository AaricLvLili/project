// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class eggbroken_item extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public count: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			return this.se.Close ();
		}
	}


	export class eggbroken_record extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public itemid: number; // tag 1
		public count: number; // tag 2
		public activityId: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.itemid = this.de.ri ();
					break;
				case 2:
					this.count = this.de.ri ();
					break;
				case 3:
					this.activityId = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 1);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 2);
			}

			if (this.activityId != undefined) {
				this.se.wi (this.activityId, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_eggbroken_add_record_request extends Sproto.SprotoTypeBase {
		
		public eggbrokenRecord: eggbroken_record; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.eggbrokenRecord = this.de.ro(eggbroken_record);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.eggbrokenRecord != undefined) {
				this.se.wo (this.eggbrokenRecord, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_eggbroken_hunt_result_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public items: eggbroken_item[]; // tag 1
		public activityId: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.items = this.de.roa(eggbroken_item);
					break;
				case 2:
					this.activityId = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.items != undefined) {
				this.se.woa (this.items, 1);
			}

			if (this.activityId != undefined) {
				this.se.wi (this.activityId, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_eggbroken_info_request extends Sproto.SprotoTypeBase {
		
		public count: number; // tag 0
		public awards: number; // tag 1
		public endTime: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.count = this.de.ri ();
					break;
				case 1:
					this.awards = this.de.ri ();
					break;
				case 2:
					this.endTime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.count != undefined) {
				this.se.wi (this.count, 0);
			}

			if (this.awards != undefined) {
				this.se.wi (this.awards, 1);
			}

			if (this.endTime != undefined) {
				this.se.wi (this.endTime, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_eggbroken_record_datas_request extends Sproto.SprotoTypeBase {
		
		public eggbrokenRecord: eggbroken_record[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.eggbrokenRecord = this.de.roa(eggbroken_record);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.eggbrokenRecord != undefined) {
				this.se.woa (this.eggbrokenRecord, 0);
			}

			return this.se.Close ();
		}
	}


}

