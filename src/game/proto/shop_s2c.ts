// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class feats_store_data extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public count: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_mystery_shop_open_state_request extends Sproto.SprotoTypeBase {
		
		public openstate: boolean; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.openstate = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.openstate != undefined) {
				this.se.wb (this.openstate, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_buy_ret_request extends Sproto.SprotoTypeBase {
		
		public result: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wi (this.result, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_cross_tianti_glory_buy_request extends Sproto.SprotoTypeBase {
		
		public code: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.code = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.code != undefined) {
				this.se.wi (this.code, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_cross_tianti_glory_times_request extends Sproto.SprotoTypeBase {
		
		public cfgIdNums: feats_store_data[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.cfgIdNums = this.de.roa(feats_store_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.cfgIdNums != undefined) {
				this.se.woa (this.cfgIdNums, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_data_request extends Sproto.SprotoTypeBase {
		
		public refreshTime: number; // tag 0
		public storescore: number; // tag 1
		public refreshCount: number; // tag 2
		public datas: shop_data[]; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.refreshTime = this.de.ri ();
					break;
				case 1:
					this.storescore = this.de.ri ();
					break;
				case 2:
					this.refreshCount = this.de.ri ();
					break;
				case 3:
					this.datas = this.de.roa(shop_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.refreshTime != undefined) {
				this.se.wi (this.refreshTime, 0);
			}

			if (this.storescore != undefined) {
				this.se.wi (this.storescore, 1);
			}

			if (this.refreshCount != undefined) {
				this.se.wi (this.refreshCount, 2);
			}

			if (this.datas != undefined) {
				this.se.woa (this.datas, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_godequip_info_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public endtime: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.endtime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.endtime != undefined) {
				this.se.wi (this.endtime, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_jifen_buy_ret_request extends Sproto.SprotoTypeBase {
		
		public result: number; // tag 0
		public num: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.ri ();
					break;
				case 1:
					this.num = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wi (this.result, 0);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_num_limit_request extends Sproto.SprotoTypeBase {
		
		public shopNum: number; // tag 0
		public useNum: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.shopNum = this.de.ri ();
					break;
				case 1:
					this.useNum = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.shopNum != undefined) {
				this.se.wi (this.shopNum, 0);
			}

			if (this.useNum != undefined) {
				this.se.wi (this.useNum, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_refresh_ret_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class sc_shop_update_buy_medal_request extends Sproto.SprotoTypeBase {
		
		public index: number; // tag 0
		public count: number; // tag 1
		public typ: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.index = this.de.ri ();
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				case 2:
					this.typ = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.index != undefined) {
				this.se.wi (this.index, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			if (this.typ != undefined) {
				this.se.wi (this.typ, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_shop_update_medal_message_request extends Sproto.SprotoTypeBase {
		
		public featsStoreData: feats_store_data[]; // tag 0
		public typ: number; // tag 1
		public credit: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.featsStoreData = this.de.roa(feats_store_data);
					break;
				case 1:
					this.typ = this.de.ri ();
					break;
				case 2:
					this.credit = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.featsStoreData != undefined) {
				this.se.woa (this.featsStoreData, 0);
			}

			if (this.typ != undefined) {
				this.se.wi (this.typ, 1);
			}

			if (this.credit != undefined) {
				this.se.wi (this.credit, 2);
			}

			return this.se.Close ();
		}
	}


	export class shop_data extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public costType: number; // tag 1
		public costNum: number; // tag 2
		public discountType: number; // tag 3
		public item: item_data; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.costType = this.de.ri ();
					break;
				case 2:
					this.costNum = this.de.ri ();
					break;
				case 3:
					this.discountType = this.de.ri ();
					break;
				case 4:
					this.item = this.de.ro(item_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.costType != undefined) {
				this.se.wi (this.costType, 1);
			}

			if (this.costNum != undefined) {
				this.se.wi (this.costNum, 2);
			}

			if (this.discountType != undefined) {
				this.se.wi (this.discountType, 3);
			}

			if (this.item != undefined) {
				this.se.wo (this.item, 4);
			}

			return this.se.Close ();
		}
	}


}

