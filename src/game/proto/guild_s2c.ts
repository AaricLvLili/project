// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class guild_apply extends Sproto.SprotoTypeBase {
		
		public actorid: number; // tag 0
		public vip_level: number; // tag 1
		public job: number; // tag 2
		public sex: number; // tag 3
		public power: number; // tag 4
		public actorname: string; // tag 5
		public monthcard: number; // tag 6
		public monthcard_super: number; // tag 7
		public constructor(buffer: Uint8Array = null) {
			super(8, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorid = this.de.ri ();
					break;
				case 1:
					this.vip_level = this.de.ri ();
					break;
				case 2:
					this.job = this.de.ri ();
					break;
				case 3:
					this.sex = this.de.ri ();
					break;
				case 4:
					this.power = this.de.ri ();
					break;
				case 5:
					this.actorname = this.de.rs ();
					break;
				case 6:
					this.monthcard = this.de.ri ();
					break;
				case 7:
					this.monthcard_super = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 0);
			}

			if (this.vip_level != undefined) {
				this.se.wi (this.vip_level, 1);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 2);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 3);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 4);
			}

			if (this.actorname != undefined) {
				this.se.ws (this.actorname, 5);
			}

			if (this.monthcard != undefined) {
				this.se.wi (this.monthcard, 6);
			}

			if (this.monthcard_super != undefined) {
				this.se.wi (this.monthcard_super, 7);
			}

			return this.se.Close ();
		}
	}


	export class guild_chat extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public content: string; // tag 1
		public actorid: number; // tag 2
		public name: string; // tag 3
		public job: number; // tag 4
		public sex: number; // tag 5
		public vip_level: number; // tag 6
		public monthcard: number; // tag 7
		public monthcard_super: number; // tag 8
		public office: number; // tag 9
		public time: number; // tag 10
		public constructor(buffer: Uint8Array = null) {
			super(11, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.content = this.de.rs ();
					break;
				case 2:
					this.actorid = this.de.ri ();
					break;
				case 3:
					this.name = this.de.rs ();
					break;
				case 4:
					this.job = this.de.ri ();
					break;
				case 5:
					this.sex = this.de.ri ();
					break;
				case 6:
					this.vip_level = this.de.ri ();
					break;
				case 7:
					this.monthcard = this.de.ri ();
					break;
				case 8:
					this.monthcard_super = this.de.ri ();
					break;
				case 9:
					this.office = this.de.ri ();
					break;
				case 10:
					this.time = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.content != undefined) {
				this.se.ws (this.content, 1);
			}

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 2);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 3);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 4);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 5);
			}

			if (this.vip_level != undefined) {
				this.se.wi (this.vip_level, 6);
			}

			if (this.monthcard != undefined) {
				this.se.wi (this.monthcard, 7);
			}

			if (this.monthcard_super != undefined) {
				this.se.wi (this.monthcard_super, 8);
			}

			if (this.office != undefined) {
				this.se.wi (this.office, 9);
			}

			if (this.time != undefined) {
				this.se.wi (this.time, 10);
			}

			return this.se.Close ();
		}
	}


	export class guild_history extends Sproto.SprotoTypeBase {
		
		public time: number; // tag 0
		public type: number; // tag 1
		public param1: number; // tag 2
		public param2: number; // tag 3
		public param3: number; // tag 4
		public name1: string; // tag 5
		public name2: string; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.time = this.de.ri ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				case 2:
					this.param1 = this.de.ri ();
					break;
				case 3:
					this.param2 = this.de.ri ();
					break;
				case 4:
					this.param3 = this.de.ri ();
					break;
				case 5:
					this.name1 = this.de.rs ();
					break;
				case 6:
					this.name2 = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.time != undefined) {
				this.se.wi (this.time, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			if (this.param1 != undefined) {
				this.se.wi (this.param1, 2);
			}

			if (this.param2 != undefined) {
				this.se.wi (this.param2, 3);
			}

			if (this.param3 != undefined) {
				this.se.wi (this.param3, 4);
			}

			if (this.name1 != undefined) {
				this.se.ws (this.name1, 5);
			}

			if (this.name2 != undefined) {
				this.se.ws (this.name2, 6);
			}

			return this.se.Close ();
		}
	}


	export class guild_skill extends Sproto.SprotoTypeBase {
		
		public level: number; // tag 0
		public exp: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.level = this.de.ri ();
					break;
				case 1:
					this.exp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.level != undefined) {
				this.se.wi (this.level, 0);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 1);
			}

			return this.se.Close ();
		}
	}


	export class guild_summary extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public level: number; // tag 1
		public actorcount: number; // tag 2
		public name: string; // tag 3
		public leadername: string; // tag 4
		public needPower: number; // tag 5
		public totalpower: number; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				case 2:
					this.actorcount = this.de.ri ();
					break;
				case 3:
					this.name = this.de.rs ();
					break;
				case 4:
					this.leadername = this.de.rs ();
					break;
				case 5:
					this.needPower = this.de.ri ();
					break;
				case 6:
					this.totalpower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			if (this.actorcount != undefined) {
				this.se.wi (this.actorcount, 2);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 3);
			}

			if (this.leadername != undefined) {
				this.se.ws (this.leadername, 4);
			}

			if (this.needPower != undefined) {
				this.se.wi (this.needPower, 5);
			}

			if (this.totalpower != undefined) {
				this.se.wi (this.totalpower, 6);
			}

			return this.se.Close ();
		}
	}


	export class guild_task extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public value: number; // tag 1
		public state: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				case 2:
					this.state = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			if (this.state != undefined) {
				this.se.wi (this.state, 2);
			}

			return this.se.Close ();
		}
	}


	export class member_info extends Sproto.SprotoTypeBase {
		
		public actorid: number; // tag 0
		public actorname: string; // tag 1
		public office: number; // tag 2
		public job: number; // tag 3
		public sex: number; // tag 4
		public vip_level: number; // tag 5
		public monthcard: number; // tag 6
		public monthcard_super: number; // tag 7
		public contribute: number; // tag 8
		public todayContri: number; // tag 9
		public power: number; // tag 10
		public logouttime: number; // tag 11
		public constructor(buffer: Uint8Array = null) {
			super(12, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorid = this.de.ri ();
					break;
				case 1:
					this.actorname = this.de.rs ();
					break;
				case 2:
					this.office = this.de.ri ();
					break;
				case 3:
					this.job = this.de.ri ();
					break;
				case 4:
					this.sex = this.de.ri ();
					break;
				case 5:
					this.vip_level = this.de.ri ();
					break;
				case 6:
					this.monthcard = this.de.ri ();
					break;
				case 7:
					this.monthcard_super = this.de.ri ();
					break;
				case 8:
					this.contribute = this.de.ri ();
					break;
				case 9:
					this.todayContri = this.de.ri ();
					break;
				case 10:
					this.power = this.de.ri ();
					break;
				case 11:
					this.logouttime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 0);
			}

			if (this.actorname != undefined) {
				this.se.ws (this.actorname, 1);
			}

			if (this.office != undefined) {
				this.se.wi (this.office, 2);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 3);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 4);
			}

			if (this.vip_level != undefined) {
				this.se.wi (this.vip_level, 5);
			}

			if (this.monthcard != undefined) {
				this.se.wi (this.monthcard, 6);
			}

			if (this.monthcard_super != undefined) {
				this.se.wi (this.monthcard_super, 7);
			}

			if (this.contribute != undefined) {
				this.se.wi (this.contribute, 8);
			}

			if (this.todayContri != undefined) {
				this.se.wi (this.todayContri, 9);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 10);
			}

			if (this.logouttime != undefined) {
				this.se.wi (this.logouttime, 11);
			}

			return this.se.Close ();
		}
	}


	export class other_guild_info extends Sproto.SprotoTypeBase {
		
		public building: number[]; // tag 0
		public fund: number; // tag 1
		public notice: string; // tag 2
		public autoJoin: number; // tag 3
		public needPower: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.building = this.de.ria ();
					break;
				case 1:
					this.fund = this.de.ri ();
					break;
				case 2:
					this.notice = this.de.rs ();
					break;
				case 3:
					this.autoJoin = this.de.ri ();
					break;
				case 4:
					this.needPower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.building != undefined) {
				this.se.wia (this.building, 0);
			}

			if (this.fund != undefined) {
				this.se.wi (this.fund, 1);
			}

			if (this.notice != undefined) {
				this.se.ws (this.notice, 2);
			}

			if (this.autoJoin != undefined) {
				this.se.wi (this.autoJoin, 3);
			}

			if (this.needPower != undefined) {
				this.se.wi (this.needPower, 4);
			}

			return this.se.Close ();
		}
	}


	export class role_guild_skill extends Sproto.SprotoTypeBase {
		
		public skill1: number[]; // tag 0
		public skill2: guild_skill[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.skill1 = this.de.ria ();
					break;
				case 1:
					this.skill2 = this.de.roa(guild_skill);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.skill1 != undefined) {
				this.se.wia (this.skill1, 0);
			}

			if (this.skill2 != undefined) {
				this.se.woa (this.skill2, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_addhistory_request extends Sproto.SprotoTypeBase {
		
		public history: guild_history; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.history = this.de.ro(guild_history);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.history != undefined) {
				this.se.wo (this.history, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_allchat_request extends Sproto.SprotoTypeBase {
		
		public chats: guild_chat[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.chats = this.de.roa(guild_chat);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.chats != undefined) {
				this.se.woa (this.chats, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_apply_request extends Sproto.SprotoTypeBase {
		
		public applyinfo: guild_apply[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.applyinfo = this.de.roa(guild_apply);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.applyinfo != undefined) {
				this.se.woa (this.applyinfo, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_autoadd_ret_request extends Sproto.SprotoTypeBase {
		
		public autoJoin: number; // tag 0
		public needPower: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.autoJoin = this.de.ri ();
					break;
				case 1:
					this.needPower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.autoJoin != undefined) {
				this.se.wi (this.autoJoin, 0);
			}

			if (this.needPower != undefined) {
				this.se.wi (this.needPower, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_broadcastchat_request extends Sproto.SprotoTypeBase {
		
		public chat: guild_chat; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.chat = this.de.ro(guild_chat);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.chat != undefined) {
				this.se.wo (this.chat, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_change_notice_ret_request extends Sproto.SprotoTypeBase {
		
		public result: number; // tag 0
		public text: string; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.ri ();
					break;
				case 1:
					this.text = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wi (this.result, 0);
			}

			if (this.text != undefined) {
				this.se.ws (this.text, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_change_office_ret_request extends Sproto.SprotoTypeBase {
		
		public actorid: number; // tag 0
		public office: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorid = this.de.ri ();
					break;
				case 1:
					this.office = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 0);
			}

			if (this.office != undefined) {
				this.se.wi (this.office, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_concount_request extends Sproto.SprotoTypeBase {
		
		public counts: number[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.counts = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.counts != undefined) {
				this.se.wia (this.counts, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_create_ret_request extends Sproto.SprotoTypeBase {
		
		public result: number; // tag 0
		public id: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wi (this.result, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_fund_request extends Sproto.SprotoTypeBase {
		
		public fund: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.fund = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.fund != undefined) {
				this.se.wi (this.fund, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_history_request extends Sproto.SprotoTypeBase {
		
		public historys: guild_history[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.historys = this.de.roa(guild_history);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.historys != undefined) {
				this.se.woa (this.historys, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_info_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public name: string; // tag 1
		public variable: other_guild_info; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.variable = this.de.ro(other_guild_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.variable != undefined) {
				this.se.wo (this.variable, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_kick_ret_request extends Sproto.SprotoTypeBase {
		
		public actorid: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_learnskill_ret_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public skillid: number; // tag 1
		public level: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.skillid = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.skillid != undefined) {
				this.se.wi (this.skillid, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_list_request extends Sproto.SprotoTypeBase {
		
		public guilds: guild_summary[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.guilds = this.de.roa(guild_summary);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.guilds != undefined) {
				this.se.woa (this.guilds, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_members_request extends Sproto.SprotoTypeBase {
		
		public members: member_info[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.members = this.de.roa(member_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.members != undefined) {
				this.se.woa (this.members, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_notice_apply_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public result: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.result = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.result != undefined) {
				this.se.wi (this.result, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_onetask_request extends Sproto.SprotoTypeBase {
		
		public task: guild_task; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.task = this.de.ro(guild_task);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.task != undefined) {
				this.se.wo (this.task, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_playerinfo_request extends Sproto.SprotoTypeBase {
		
		public contribute: number; // tag 0
		public curcontribute: number; // tag 1
		public office: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.contribute = this.de.ri ();
					break;
				case 1:
					this.curcontribute = this.de.ri ();
					break;
				case 2:
					this.office = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.contribute != undefined) {
				this.se.wi (this.contribute, 0);
			}

			if (this.curcontribute != undefined) {
				this.se.wi (this.curcontribute, 1);
			}

			if (this.office != undefined) {
				this.se.wi (this.office, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_skillinfo_request extends Sproto.SprotoTypeBase {
		
		public skills: role_guild_skill[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.skills = this.de.roa(role_guild_skill);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.skills != undefined) {
				this.se.woa (this.skills, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_taskinfo_request extends Sproto.SprotoTypeBase {
		
		public task: guild_task[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.task = this.de.roa(guild_task);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.task != undefined) {
				this.se.woa (this.task, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_temperskill_ret_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public skillid: number; // tag 1
		public level: number; // tag 2
		public exp: number; // tag 3
		public addexp: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.skillid = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				case 3:
					this.exp = this.de.ri ();
					break;
				case 4:
					this.addexp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.skillid != undefined) {
				this.se.wi (this.skillid, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 3);
			}

			if (this.addexp != undefined) {
				this.se.wi (this.addexp, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_guild_upbuilding_ret_request extends Sproto.SprotoTypeBase {
		
		public buildtype: number; // tag 0
		public level: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.buildtype = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.buildtype != undefined) {
				this.se.wi (this.buildtype, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			return this.se.Close ();
		}
	}


}

