// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class buff extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public sign: boolean; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.sign = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.sign != undefined) {
				this.se.wb (this.sign, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_shiliansha_send_bufffs_request extends Sproto.SprotoTypeBase {
		
		public buffs: buff[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.buffs = this.de.roa(buff);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.buffs != undefined) {
				this.se.woa (this.buffs, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_shiliansha_send_enemyhp_request extends Sproto.SprotoTypeBase {
		
		public dhp: number; // tag 0
		public ctype: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.dhp = this.de.ri ();
					break;
				case 1:
					this.ctype = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.dhp != undefined) {
				this.se.wi (this.dhp, 0);
			}

			if (this.ctype != undefined) {
				this.se.wi (this.ctype, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_shiliansha_send_info_request extends Sproto.SprotoTypeBase {
		
		public useCnt: number; // tag 0
		public winCnt: number; // tag 1
		public raidType: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.useCnt = this.de.ri ();
					break;
				case 1:
					this.winCnt = this.de.ri ();
					break;
				case 2:
					this.raidType = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.useCnt != undefined) {
				this.se.wi (this.useCnt, 0);
			}

			if (this.winCnt != undefined) {
				this.se.wi (this.winCnt, 1);
			}

			if (this.raidType != undefined) {
				this.se.wi (this.raidType, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_shiliansha_send_relute_request extends Sproto.SprotoTypeBase {
		
		public relute: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.relute = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.relute != undefined) {
				this.se.wi (this.relute, 0);
			}

			return this.se.Close ();
		}
	}


}

