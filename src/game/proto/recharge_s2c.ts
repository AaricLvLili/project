// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class recharge_data extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public day: number; // tag 1
		public isFirst: number; // tag 2
		public num: number; // tag 3
		public isAwards: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.day = this.de.ri ();
					break;
				case 2:
					this.isFirst = this.de.ri ();
					break;
				case 3:
					this.num = this.de.ri ();
					break;
				case 4:
					this.isAwards = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.day != undefined) {
				this.se.wi (this.day, 1);
			}

			if (this.isFirst != undefined) {
				this.se.wi (this.isFirst, 2);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 3);
			}

			if (this.isAwards != undefined) {
				this.se.wi (this.isAwards, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_pop_shouchong_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class sc_recharge_change_data_request extends Sproto.SprotoTypeBase {
		
		public data: recharge_data; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.ro(recharge_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.wo (this.data, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_recharge_first_status_request extends Sproto.SprotoTypeBase {
		
		public firstOpenStatus: boolean; // tag 0
		public firstRewardStatus: number; // tag 1
		public day: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.firstOpenStatus = this.de.rb ();
					break;
				case 1:
					this.firstRewardStatus = this.de.ri ();
					break;
				case 2:
					this.day = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.firstOpenStatus != undefined) {
				this.se.wb (this.firstOpenStatus, 0);
			}

			if (this.firstRewardStatus != undefined) {
				this.se.wi (this.firstRewardStatus, 1);
			}

			if (this.day != undefined) {
				this.se.wi (this.day, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_recharge_get_data_request extends Sproto.SprotoTypeBase {
		
		public data: recharge_data; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.ro(recharge_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.wo (this.data, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_recharge_get_month_day_request extends Sproto.SprotoTypeBase {
		
		public monthDay: number; // tag 0
		public flag: number; // tag 1
		public type: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.monthDay = this.de.ri ();
					break;
				case 1:
					this.flag = this.de.ri ();
					break;
				case 2:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.monthDay != undefined) {
				this.se.wi (this.monthDay, 0);
			}

			if (this.flag != undefined) {
				this.se.wi (this.flag, 1);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_recharge_gift_reward_request extends Sproto.SprotoTypeBase {
		
		public dayNum: number; // tag 0
		public drawBinList: number[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.dayNum = this.de.ri ();
					break;
				case 1:
					this.drawBinList = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.dayNum != undefined) {
				this.se.wi (this.dayNum, 0);
			}

			if (this.drawBinList != undefined) {
				this.se.wia (this.drawBinList, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_recharge_item_data_request extends Sproto.SprotoTypeBase {
		
		public costList: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.costList = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.costList != undefined) {
				this.se.wi (this.costList, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_recharge_month_reward_request extends Sproto.SprotoTypeBase {
		
		public status: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.status != undefined) {
				this.se.wi (this.status, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_rxws_can_recharge_request extends Sproto.SprotoTypeBase {
		
		public status: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.status != undefined) {
				this.se.wi (this.status, 0);
			}

			return this.se.Close ();
		}
	}


}

