// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_tatoo_equipoff_req_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_tatoo_equipon_req_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public handler: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				case 2:
					this.handler = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			if (this.handler != undefined) {
				this.se.wi (this.handler, 2);
			}

			return this.se.Close ();
		}
	}


	export class cs_tatoo_init_req_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class cs_tatoo_strength_req_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public slot: number; // tag 1
		public handler: number[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.slot = this.de.ri ();
					break;
				case 2:
					this.handler = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.slot != undefined) {
				this.se.wi (this.slot, 1);
			}

			if (this.handler != undefined) {
				this.se.wia (this.handler, 2);
			}

			return this.se.Close ();
		}
	}


}

