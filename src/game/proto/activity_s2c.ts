// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class activity_base_type extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public startTime: number; // tag 1
		public endTime: number; // tag 2
		public type: number; // tag 3
		public openState: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.startTime = this.de.ri ();
					break;
				case 2:
					this.endTime = this.de.ri ();
					break;
				case 3:
					this.type = this.de.ri ();
					break;
				case 4:
					this.openState = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.startTime != undefined) {
				this.se.wi (this.startTime, 1);
			}

			if (this.endTime != undefined) {
				this.se.wi (this.endTime, 2);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 3);
			}

			if (this.openState != undefined) {
				this.se.wi (this.openState, 4);
			}

			return this.se.Close ();
		}
	}


	export class activity_dabiao_data extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public value: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_data_collection extends Sproto.SprotoTypeBase {
		
		public type01: activity_type01; // tag 0
		public type02: activity_type02; // tag 1
		public type03: activity_type03; // tag 2
		public type04: activity_type04; // tag 3
		public type05: activity_type05; // tag 4
		public type06: activity_type06; // tag 5
		public type07: activity_type07; // tag 6
		public type08: activity_type08; // tag 7
		public type09: activity_type09; // tag 8
		public type10: activity_type10; // tag 9
		public type11: activity_type11; // tag 10
		public type12: activity_type12; // tag 11
		public type13: activity_type13; // tag 12
		public type14: activity_type14; // tag 13
		public type20: activity_type20; // tag 14
		public type15: activity_type15; // tag 15
		public type302: activity_type16; // tag 16
		public type303: activity_type16; // tag 17
		public type21: activity_type21; // tag 18
		public type22: activity_type22; // tag 19
		public type31: activity_type31; // tag 20
		public type32: activity_type32; // tag 21
		public type35: activity_type35; // tag 22
		public constructor(buffer: Uint8Array = null) {
			super(23, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type01 = this.de.ro(activity_type01);
					break;
				case 1:
					this.type02 = this.de.ro(activity_type02);
					break;
				case 2:
					this.type03 = this.de.ro(activity_type03);
					break;
				case 3:
					this.type04 = this.de.ro(activity_type04);
					break;
				case 4:
					this.type05 = this.de.ro(activity_type05);
					break;
				case 5:
					this.type06 = this.de.ro(activity_type06);
					break;
				case 6:
					this.type07 = this.de.ro(activity_type07);
					break;
				case 7:
					this.type08 = this.de.ro(activity_type08);
					break;
				case 8:
					this.type09 = this.de.ro(activity_type09);
					break;
				case 9:
					this.type10 = this.de.ro(activity_type10);
					break;
				case 10:
					this.type11 = this.de.ro(activity_type11);
					break;
				case 11:
					this.type12 = this.de.ro(activity_type12);
					break;
				case 12:
					this.type13 = this.de.ro(activity_type13);
					break;
				case 13:
					this.type14 = this.de.ro(activity_type14);
					break;
				case 14:
					this.type20 = this.de.ro(activity_type20);
					break;
				case 15:
					this.type15 = this.de.ro(activity_type15);
					break;
				case 16:
					this.type302 = this.de.ro(activity_type16);
					break;
				case 17:
					this.type303 = this.de.ro(activity_type16);
					break;
				case 18:
					this.type21 = this.de.ro(activity_type21);
					break;
				case 19:
					this.type22 = this.de.ro(activity_type22);
					break;
				case 20:
					this.type31 = this.de.ro(activity_type31);
					break;
				case 21:
					this.type32 = this.de.ro(activity_type32);
					break;
				case 22:
					this.type35 = this.de.ro(activity_type35);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type01 != undefined) {
				this.se.wo (this.type01, 0);
			}

			if (this.type02 != undefined) {
				this.se.wo (this.type02, 1);
			}

			if (this.type03 != undefined) {
				this.se.wo (this.type03, 2);
			}

			if (this.type04 != undefined) {
				this.se.wo (this.type04, 3);
			}

			if (this.type05 != undefined) {
				this.se.wo (this.type05, 4);
			}

			if (this.type06 != undefined) {
				this.se.wo (this.type06, 5);
			}

			if (this.type07 != undefined) {
				this.se.wo (this.type07, 6);
			}

			if (this.type08 != undefined) {
				this.se.wo (this.type08, 7);
			}

			if (this.type09 != undefined) {
				this.se.wo (this.type09, 8);
			}

			if (this.type10 != undefined) {
				this.se.wo (this.type10, 9);
			}

			if (this.type11 != undefined) {
				this.se.wo (this.type11, 10);
			}

			if (this.type12 != undefined) {
				this.se.wo (this.type12, 11);
			}

			if (this.type13 != undefined) {
				this.se.wo (this.type13, 12);
			}

			if (this.type14 != undefined) {
				this.se.wo (this.type14, 13);
			}

			if (this.type20 != undefined) {
				this.se.wo (this.type20, 14);
			}

			if (this.type15 != undefined) {
				this.se.wo (this.type15, 15);
			}

			if (this.type302 != undefined) {
				this.se.wo (this.type302, 16);
			}

			if (this.type303 != undefined) {
				this.se.wo (this.type303, 17);
			}

			if (this.type21 != undefined) {
				this.se.wo (this.type21, 18);
			}

			if (this.type22 != undefined) {
				this.se.wo (this.type22, 19);
			}

			if (this.type31 != undefined) {
				this.se.wo (this.type31, 20);
			}

			if (this.type32 != undefined) {
				this.se.wo (this.type32, 21);
			}

			if (this.type35 != undefined) {
				this.se.wo (this.type35, 22);
			}

			return this.se.Close ();
		}
	}


	export class activity_luckywheel_data extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public value: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_type01 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public record: number[]; // tag 1
		public nums: number[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.record = this.de.ria ();
					break;
				case 2:
					this.nums = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.record != undefined) {
				this.se.wia (this.record, 1);
			}

			if (this.nums != undefined) {
				this.se.wia (this.nums, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type02 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public buyData: number[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.buyData = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.buyData != undefined) {
				this.se.wia (this.buyData, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_type03 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public record: number; // tag 1
		public day: number; // tag 2
		public rechargeCount: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.record = this.de.ri ();
					break;
				case 2:
					this.day = this.de.ri ();
					break;
				case 4:
					this.rechargeCount = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.record != undefined) {
				this.se.wi (this.record, 1);
			}

			if (this.day != undefined) {
				this.se.wi (this.day, 2);
			}

			if (this.rechargeCount != undefined) {
				this.se.wi (this.rechargeCount, 4);
			}

			return this.se.Close ();
		}
	}


	export class activity_type04 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			return this.se.Close ();
		}
	}


	export class activity_type05 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public record: number; // tag 1
		public logTime: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.record = this.de.ri ();
					break;
				case 2:
					this.logTime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.record != undefined) {
				this.se.wi (this.record, 1);
			}

			if (this.logTime != undefined) {
				this.se.wi (this.logTime, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type06 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public record: number; // tag 1
		public todayRecharge: number; // tag 2
		public rechargeDays: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.record = this.de.ri ();
					break;
				case 2:
					this.todayRecharge = this.de.ri ();
					break;
				case 3:
					this.rechargeDays = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.record != undefined) {
				this.se.wi (this.record, 1);
			}

			if (this.todayRecharge != undefined) {
				this.se.wi (this.todayRecharge, 2);
			}

			if (this.rechargeDays != undefined) {
				this.se.wi (this.rechargeDays, 3);
			}

			return this.se.Close ();
		}
	}


	export class activity_type07 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public recharge: number; // tag 1
		public status: boolean; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.recharge = this.de.ri ();
					break;
				case 2:
					this.status = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.recharge != undefined) {
				this.se.wi (this.recharge, 1);
			}

			if (this.status != undefined) {
				this.se.wb (this.status, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type08 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public datas: activity_type08_item[]; // tag 1
		public status: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.datas = this.de.roa(activity_type08_item);
					break;
				case 3:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.datas != undefined) {
				this.se.woa (this.datas, 1);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 3);
			}

			return this.se.Close ();
		}
	}


	export class activity_type08_item extends Sproto.SprotoTypeBase {
		
		public index: number; // tag 0
		public status: number; // tag 1
		public day: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.index = this.de.ri ();
					break;
				case 1:
					this.status = this.de.ri ();
					break;
				case 2:
					this.day = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.index != undefined) {
				this.se.wi (this.index, 0);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 1);
			}

			if (this.day != undefined) {
				this.se.wi (this.day, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type09 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public buyData: number[]; // tag 1
		public day: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.buyData = this.de.ria ();
					break;
				case 2:
					this.day = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.buyData != undefined) {
				this.se.wia (this.buyData, 1);
			}

			if (this.day != undefined) {
				this.se.wi (this.day, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type10 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public cfgids: activity_type19_item_data[]; // tag 1
		public recharge: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.cfgids = this.de.roa(activity_type19_item_data);
					break;
				case 2:
					this.recharge = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.cfgids != undefined) {
				this.se.woa (this.cfgids, 1);
			}

			if (this.recharge != undefined) {
				this.se.wi (this.recharge, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type11 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public cfgids: activity_type19_item_data[]; // tag 1
		public recharge: number; // tag 2
		public diffDay: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.cfgids = this.de.roa(activity_type19_item_data);
					break;
				case 2:
					this.recharge = this.de.ri ();
					break;
				case 3:
					this.diffDay = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.cfgids != undefined) {
				this.se.woa (this.cfgids, 1);
			}

			if (this.recharge != undefined) {
				this.se.wi (this.recharge, 2);
			}

			if (this.diffDay != undefined) {
				this.se.wi (this.diffDay, 3);
			}

			return this.se.Close ();
		}
	}


	export class activity_type12 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public eggBrokenAwards: number; // tag 1
		public eggBrokenCount: number; // tag 2
		public diffDay: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.eggBrokenAwards = this.de.ri ();
					break;
				case 2:
					this.eggBrokenCount = this.de.ri ();
					break;
				case 3:
					this.diffDay = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.eggBrokenAwards != undefined) {
				this.se.wi (this.eggBrokenAwards, 1);
			}

			if (this.eggBrokenCount != undefined) {
				this.se.wi (this.eggBrokenCount, 2);
			}

			if (this.diffDay != undefined) {
				this.se.wi (this.diffDay, 3);
			}

			return this.se.Close ();
		}
	}


	export class activity_type13 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			return this.se.Close ();
		}
	}


	export class activity_type14 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public cfgids: activity_type19_item_data[]; // tag 1
		public accumulativeConsumption: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.cfgids = this.de.roa(activity_type19_item_data);
					break;
				case 2:
					this.accumulativeConsumption = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.cfgids != undefined) {
				this.se.woa (this.cfgids, 1);
			}

			if (this.accumulativeConsumption != undefined) {
				this.se.wi (this.accumulativeConsumption, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type15 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public buyids: activity_type15_buyids[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.buyids = this.de.roa(activity_type15_buyids);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.buyids != undefined) {
				this.se.woa (this.buyids, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_type15_buyids extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public buyServerRunDay: number; // tag 1
		public buyPrice: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.buyServerRunDay = this.de.ri ();
					break;
				case 2:
					this.buyPrice = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.buyServerRunDay != undefined) {
				this.se.wi (this.buyServerRunDay, 1);
			}

			if (this.buyPrice != undefined) {
				this.se.wi (this.buyPrice, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type16 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public records: number; // tag 1
		public recharge: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.records = this.de.ri ();
					break;
				case 2:
					this.recharge = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.records != undefined) {
				this.se.wi (this.records, 1);
			}

			if (this.recharge != undefined) {
				this.se.wi (this.recharge, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type17 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public dayIndex: number; // tag 1
		public isGet: number; // tag 2
		public canGet: boolean; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.dayIndex = this.de.ri ();
					break;
				case 2:
					this.isGet = this.de.ri ();
					break;
				case 3:
					this.canGet = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.dayIndex != undefined) {
				this.se.wi (this.dayIndex, 1);
			}

			if (this.isGet != undefined) {
				this.se.wi (this.isGet, 2);
			}

			if (this.canGet != undefined) {
				this.se.wb (this.canGet, 3);
			}

			return this.se.Close ();
		}
	}


	export class activity_type18 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public lastTime: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.lastTime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.lastTime != undefined) {
				this.se.wi (this.lastTime, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_type19 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public count: number; // tag 1
		public itemState: activity_type19_item_data[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				case 2:
					this.itemState = this.de.roa(activity_type19_item_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			if (this.itemState != undefined) {
				this.se.woa (this.itemState, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type19_item_data extends Sproto.SprotoTypeBase {
		
		public state: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.state = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.state != undefined) {
				this.se.wi (this.state, 0);
			}

			return this.se.Close ();
		}
	}


	export class activity_type20 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public signInDay: number; // tag 1
		public mondCnt: number; // tag 3
		public siganInData: number[]; // tag 4
		public todaySigan: number; // tag 5
		public month: number; // tag 6
		public mondAllCnt: number; // tag 7
		public constructor(buffer: Uint8Array = null) {
			super(8, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.signInDay = this.de.ri ();
					break;
				case 3:
					this.mondCnt = this.de.ri ();
					break;
				case 4:
					this.siganInData = this.de.ria ();
					break;
				case 5:
					this.todaySigan = this.de.ri ();
					break;
				case 6:
					this.month = this.de.ri ();
					break;
				case 7:
					this.mondAllCnt = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.signInDay != undefined) {
				this.se.wi (this.signInDay, 1);
			}

			if (this.mondCnt != undefined) {
				this.se.wi (this.mondCnt, 3);
			}

			if (this.siganInData != undefined) {
				this.se.wia (this.siganInData, 4);
			}

			if (this.todaySigan != undefined) {
				this.se.wi (this.todaySigan, 5);
			}

			if (this.month != undefined) {
				this.se.wi (this.month, 6);
			}

			if (this.mondAllCnt != undefined) {
				this.se.wi (this.mondAllCnt, 7);
			}

			return this.se.Close ();
		}
	}


	export class activity_type21 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public count: number; // tag 1
		public rank: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				case 2:
					this.rank = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			if (this.rank != undefined) {
				this.se.wi (this.rank, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type22 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public count: number; // tag 1
		public rank: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				case 2:
					this.rank = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			if (this.rank != undefined) {
				this.se.wi (this.rank, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type30 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public giftBag: number[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.giftBag = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.giftBag != undefined) {
				this.se.wia (this.giftBag, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_type31 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public goldPool: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.goldPool = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.goldPool != undefined) {
				this.se.wi (this.goldPool, 1);
			}

			return this.se.Close ();
		}
	}


	export class activity_type32 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public count: number; // tag 1
		public rank: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				case 2:
					this.rank = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			if (this.rank != undefined) {
				this.se.wi (this.rank, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type33 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public yuanbao: type33Yuanbao; // tag 1
		public money: type33BaseInfo; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.yuanbao = this.de.ro(type33Yuanbao);
					break;
				case 2:
					this.money = this.de.ro(type33BaseInfo);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.yuanbao != undefined) {
				this.se.wo (this.yuanbao, 1);
			}

			if (this.money != undefined) {
				this.se.wo (this.money, 2);
			}

			return this.se.Close ();
		}
	}


	export class activity_type35 extends Sproto.SprotoTypeBase {
		
		public baseData: activity_base_type; // tag 0
		public exp: number; // tag 1
		public lv: number; // tag 2
		public scala: number; // tag 3
		public extraExp: number; // tag 4
		public lvList: listinfo[]; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.baseData = this.de.ro(activity_base_type);
					break;
				case 1:
					this.exp = this.de.ri ();
					break;
				case 2:
					this.lv = this.de.ri ();
					break;
				case 3:
					this.scala = this.de.ri ();
					break;
				case 4:
					this.extraExp = this.de.ri ();
					break;
				case 5:
					this.lvList = this.de.roa(listinfo);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.baseData != undefined) {
				this.se.wo (this.baseData, 0);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 1);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 2);
			}

			if (this.scala != undefined) {
				this.se.wi (this.scala, 3);
			}

			if (this.extraExp != undefined) {
				this.se.wi (this.extraExp, 4);
			}

			if (this.lvList != undefined) {
				this.se.woa (this.lvList, 5);
			}

			return this.se.Close ();
		}
	}


	export class listinfo extends Sproto.SprotoTypeBase {
		
		public reward1: number; // tag 0
		public reward2: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.reward1 = this.de.ri ();
					break;
				case 1:
					this.reward2 = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.reward1 != undefined) {
				this.se.wi (this.reward1, 0);
			}

			if (this.reward2 != undefined) {
				this.se.wi (this.reward2, 1);
			}

			return this.se.Close ();
		}
	}


	export class luckywheel_item extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public count: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 1);
			}

			return this.se.Close ();
		}
	}


	export class luckywheel_record extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public itemid: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.itemid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_RMB_info_request extends Sproto.SprotoTypeBase {
		
		public data: type33BaseInfo; // tag 0
		public id: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.ro(type33BaseInfo);
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.wo (this.data, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_dabiao_info_request extends Sproto.SprotoTypeBase {
		
		public acId: number; // tag 1
		public index: number; // tag 2
		public draw: number; // tag 3
		public value: number; // tag 4
		public rankInfo: activity_dabiao_data[]; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 1:
					this.acId = this.de.ri ();
					break;
				case 2:
					this.index = this.de.ri ();
					break;
				case 3:
					this.draw = this.de.ri ();
					break;
				case 4:
					this.value = this.de.ri ();
					break;
				case 5:
					this.rankInfo = this.de.roa(activity_dabiao_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.acId != undefined) {
				this.se.wi (this.acId, 1);
			}

			if (this.index != undefined) {
				this.se.wi (this.index, 2);
			}

			if (this.draw != undefined) {
				this.se.wi (this.draw, 3);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 4);
			}

			if (this.rankInfo != undefined) {
				this.se.woa (this.rankInfo, 5);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_dabiao_reward_request extends Sproto.SprotoTypeBase {
		
		public draw: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.draw = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.draw != undefined) {
				this.se.wi (this.draw, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_init_info_request extends Sproto.SprotoTypeBase {
		
		public datas: activity_data_collection[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.datas = this.de.roa(activity_data_collection);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.datas != undefined) {
				this.se.woa (this.datas, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_reward_result_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public data: activity_data_collection; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.data = this.de.ro(activity_data_collection);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.data != undefined) {
				this.se.wo (this.data, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_update_info_request extends Sproto.SprotoTypeBase {
		
		public index: number; // tag 0
		public data: activity_data_collection; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.index = this.de.ri ();
					break;
				case 1:
					this.data = this.de.ro(activity_data_collection);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.index != undefined) {
				this.se.wi (this.index, 0);
			}

			if (this.data != undefined) {
				this.se.wo (this.data, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_warorder_exreward_request extends Sproto.SprotoTypeBase {
		
		public data: reward_data[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.roa(reward_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.woa (this.data, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_warorder_reward_request extends Sproto.SprotoTypeBase {
		
		public data: reward_data[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.roa(reward_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.woa (this.data, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_activity_yuanbao_request extends Sproto.SprotoTypeBase {
		
		public data: type33BaseInfo; // tag 0
		public id: number; // tag 1
		public tiemCd: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.data = this.de.ro(type33BaseInfo);
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.tiemCd = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.data != undefined) {
				this.se.wo (this.data, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.tiemCd != undefined) {
				this.se.wi (this.tiemCd, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_add_small_routine_state_request extends Sproto.SprotoTypeBase {
		
		public state: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.state = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.state != undefined) {
				this.se.wi (this.state, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_luckywheel_add_record_request extends Sproto.SprotoTypeBase {
		
		public luckyWheelRecord: luckywheel_record; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.luckyWheelRecord = this.de.ro(luckywheel_record);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.luckyWheelRecord != undefined) {
				this.se.wo (this.luckyWheelRecord, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_luckywheel_goldPool_broadcast_request extends Sproto.SprotoTypeBase {
		
		public goldPool: number; // tag 0
		public activityId: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.goldPool = this.de.ri ();
					break;
				case 1:
					this.activityId = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.goldPool != undefined) {
				this.se.wi (this.goldPool, 0);
			}

			if (this.activityId != undefined) {
				this.se.wi (this.activityId, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_luckywheel_hunt_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public items: luckywheel_item[]; // tag 1
		public activityId: number; // tag 2
		public goldCount: number; // tag 3
		public luckyCount: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.items = this.de.roa(luckywheel_item);
					break;
				case 2:
					this.activityId = this.de.ri ();
					break;
				case 3:
					this.goldCount = this.de.ri ();
					break;
				case 4:
					this.luckyCount = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.items != undefined) {
				this.se.woa (this.items, 1);
			}

			if (this.activityId != undefined) {
				this.se.wi (this.activityId, 2);
			}

			if (this.goldCount != undefined) {
				this.se.wi (this.goldCount, 3);
			}

			if (this.luckyCount != undefined) {
				this.se.wi (this.luckyCount, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_luckywheel_rank_request extends Sproto.SprotoTypeBase {
		
		public rankInfo: activity_dabiao_data[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.rankInfo = this.de.roa(activity_dabiao_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.rankInfo != undefined) {
				this.se.woa (this.rankInfo, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_luckywheel_record_request extends Sproto.SprotoTypeBase {
		
		public luckywheelRecord: luckywheel_record[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.luckywheelRecord = this.de.roa(luckywheel_record);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.luckywheelRecord != undefined) {
				this.se.woa (this.luckywheelRecord, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_one_recharge_activity_gain_request extends Sproto.SprotoTypeBase {
		
		public code: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.code = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.code != undefined) {
				this.se.wi (this.code, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_one_recharge_activity_state_request extends Sproto.SprotoTypeBase {
		
		public awardState: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.awardState = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.awardState != undefined) {
				this.se.wi (this.awardState, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_rebate_activity_buy_request extends Sproto.SprotoTypeBase {
		
		public code: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.code = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.code != undefined) {
				this.se.wi (this.code, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_rebate_activity_gain_other_awards_request extends Sproto.SprotoTypeBase {
		
		public code: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.code = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.code != undefined) {
				this.se.wi (this.code, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_rebate_activity_info_request extends Sproto.SprotoTypeBase {
		
		public activityId: number; // tag 0
		public gainNum: number; // tag 1
		public dayKey: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.activityId = this.de.ri ();
					break;
				case 1:
					this.gainNum = this.de.ri ();
					break;
				case 2:
					this.dayKey = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.activityId != undefined) {
				this.se.wi (this.activityId, 0);
			}

			if (this.gainNum != undefined) {
				this.se.wi (this.gainNum, 1);
			}

			if (this.dayKey != undefined) {
				this.se.wi (this.dayKey, 2);
			}

			return this.se.Close ();
		}
	}


	export class type33BaseInfo extends Sproto.SprotoTypeBase {
		
		public status: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 1:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.status != undefined) {
				this.se.wi (this.status, 1);
			}

			return this.se.Close ();
		}
	}


	export class type33Yuanbao extends Sproto.SprotoTypeBase {
		
		public status: number; // tag 0
		public coolTime: number; // tag 1
		public num: number; // tag 2
		public count: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.status = this.de.ri ();
					break;
				case 1:
					this.coolTime = this.de.ri ();
					break;
				case 2:
					this.num = this.de.ri ();
					break;
				case 3:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.status != undefined) {
				this.se.wi (this.status, 0);
			}

			if (this.coolTime != undefined) {
				this.se.wi (this.coolTime, 1);
			}

			if (this.num != undefined) {
				this.se.wi (this.num, 2);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 3);
			}

			return this.se.Close ();
		}
	}


}

