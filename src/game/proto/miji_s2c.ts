// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class mijiData extends Sproto.SprotoTypeBase {
		
		public mijiID: number[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.mijiID = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.mijiID != undefined) {
				this.se.wia (this.mijiID, 0);
			}

			return this.se.Close ();
		}
	}


	export class mijiPowerData extends Sproto.SprotoTypeBase {
		
		public roleIndex: number; // tag 0
		public power: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleIndex = this.de.ri ();
					break;
				case 1:
					this.power = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleIndex != undefined) {
				this.se.wi (this.roleIndex, 0);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_change_result_request extends Sproto.SprotoTypeBase {
		
		public itemID: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.itemID = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.itemID != undefined) {
				this.se.wi (this.itemID, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_datas_request extends Sproto.SprotoTypeBase {
		
		public grid: number; // tag 0
		public mijiDatas: mijiData[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.grid = this.de.ri ();
					break;
				case 1:
					this.mijiDatas = this.de.roa(mijiData);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.grid != undefined) {
				this.se.wi (this.grid, 0);
			}

			if (this.mijiDatas != undefined) {
				this.se.woa (this.mijiDatas, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_fuben_award_request extends Sproto.SprotoTypeBase {
		
		public reward: reward_data[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 1:
					this.reward = this.de.roa(reward_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.reward != undefined) {
				this.se.woa (this.reward, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_fuben_award_resulte_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class sc_miji_fuben_enter_ret_request extends Sproto.SprotoTypeBase {
		
		public status: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.status = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.status != undefined) {
				this.se.wi (this.status, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_fuben_finished_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public star: number; // tag 1
		public nextId: number; // tag 2
		public status: number; // tag 3
		public quickid: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.nextId = this.de.ri ();
					break;
				case 3:
					this.status = this.de.ri ();
					break;
				case 4:
					this.quickid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.nextId != undefined) {
				this.se.wi (this.nextId, 2);
			}

			if (this.status != undefined) {
				this.se.wi (this.status, 3);
			}

			if (this.quickid != undefined) {
				this.se.wi (this.quickid, 4);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_fuben_panel_info_request extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public star: number; // tag 1
		public sec: number; // tag 2
		public quickcount: number; // tag 3
		public rewardid: number; // tag 4
		public quickid: number; // tag 5
		public todayCanChallengeCount: number; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.sec = this.de.ri ();
					break;
				case 3:
					this.quickcount = this.de.ri ();
					break;
				case 4:
					this.rewardid = this.de.ri ();
					break;
				case 5:
					this.quickid = this.de.ri ();
					break;
				case 6:
					this.todayCanChallengeCount = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.sec != undefined) {
				this.se.wi (this.sec, 2);
			}

			if (this.quickcount != undefined) {
				this.se.wi (this.quickcount, 3);
			}

			if (this.rewardid != undefined) {
				this.se.wi (this.rewardid, 4);
			}

			if (this.quickid != undefined) {
				this.se.wi (this.quickid, 5);
			}

			if (this.todayCanChallengeCount != undefined) {
				this.se.wi (this.todayCanChallengeCount, 6);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_fuben_quick_info_request extends Sproto.SprotoTypeBase {
		
		public status: number; // tag 0
		public rewards: reward_data[]; // tag 1
		public quickcount: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.status = this.de.ri ();
					break;
				case 1:
					this.rewards = this.de.roa(reward_data);
					break;
				case 2:
					this.quickcount = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.status != undefined) {
				this.se.wi (this.status, 0);
			}

			if (this.rewards != undefined) {
				this.se.woa (this.rewards, 1);
			}

			if (this.quickcount != undefined) {
				this.se.wi (this.quickcount, 2);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_power_change_request extends Sproto.SprotoTypeBase {
		
		public power: mijiPowerData[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.power = this.de.roa(mijiPowerData);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.power != undefined) {
				this.se.woa (this.power, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_miji_update_request extends Sproto.SprotoTypeBase {
		
		public roleID: number; // tag 0
		public index: number; // tag 1
		public mijiID: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleID = this.de.ri ();
					break;
				case 1:
					this.index = this.de.ri ();
					break;
				case 2:
					this.mijiID = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleID != undefined) {
				this.se.wi (this.roleID, 0);
			}

			if (this.index != undefined) {
				this.se.wi (this.index, 1);
			}

			if (this.mijiID != undefined) {
				this.se.wi (this.mijiID, 2);
			}

			return this.se.Close ();
		}
	}


}

