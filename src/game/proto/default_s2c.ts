// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class actor_die_notice_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class actor_guild_change_request extends Sproto.SprotoTypeBase {
		
		public guildID: number; // tag 0
		public guildName: string; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.guildID = this.de.ri ();
					break;
				case 1:
					this.guildName = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.guildID != undefined) {
				this.se.wi (this.guildID, 0);
			}

			if (this.guildName != undefined) {
				this.se.ws (this.guildName, 1);
			}

			return this.se.Close ();
		}
	}


	export class aritifact_info extends Sproto.SprotoTypeBase {
		
		public sumpower: number; // tag 0
		public artifacts: artifact[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.sumpower = this.de.ri ();
					break;
				case 1:
					this.artifacts = this.de.roa(artifact);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 0);
			}

			if (this.artifacts != undefined) {
				this.se.woa (this.artifacts, 1);
			}

			return this.se.Close ();
		}
	}


	export class artifact extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public stage: number; // tag 1
		public level: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.stage = this.de.ri ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.stage != undefined) {
				this.se.wi (this.stage, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			return this.se.Close ();
		}
	}


	export class attr_update_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public atrrid: number; // tag 1
		public atrr: number; // tag 3
		public showType: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.atrrid = this.de.ri ();
					break;
				case 3:
					this.atrr = this.de.ri ();
					break;
				case 4:
					this.showType = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.atrrid != undefined) {
				this.se.wi (this.atrrid, 1);
			}

			if (this.atrr != undefined) {
				this.se.wi (this.atrr, 3);
			}

			if (this.showType != undefined) {
				this.se.wi (this.showType, 4);
			}

			return this.se.Close ();
		}
	}


	export class attribute_datas extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public value: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			return this.se.Close ();
		}
	}


	export class blood_update_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public hp: number; // tag 1
		public dhp: number; // tag 2
		public showType: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.hp = this.de.ri ();
					break;
				case 2:
					this.dhp = this.de.ri ();
					break;
				case 3:
					this.showType = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.hp != undefined) {
				this.se.wi (this.hp, 1);
			}

			if (this.dhp != undefined) {
				this.se.wi (this.dhp, 2);
			}

			if (this.showType != undefined) {
				this.se.wi (this.showType, 3);
			}

			return this.se.Close ();
		}
	}


	export class create_monster_entity_request extends Sproto.SprotoTypeBase {
		
		public entityType: number; // tag 0
		public handler: number; // tag 1
		public entityModelBase: entity_model_base; // tag 2
		public attributeData: number[]; // tag 3
		public owerid: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.entityType = this.de.ri ();
					break;
				case 1:
					this.handler = this.de.ri ();
					break;
				case 2:
					this.entityModelBase = this.de.ro(entity_model_base);
					break;
				case 3:
					this.attributeData = this.de.ria ();
					break;
				case 4:
					this.owerid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.entityType != undefined) {
				this.se.wi (this.entityType, 0);
			}

			if (this.handler != undefined) {
				this.se.wi (this.handler, 1);
			}

			if (this.entityModelBase != undefined) {
				this.se.wo (this.entityModelBase, 2);
			}

			if (this.attributeData != undefined) {
				this.se.wia (this.attributeData, 3);
			}

			if (this.owerid != undefined) {
				this.se.wi (this.owerid, 4);
			}

			return this.se.Close ();
		}
	}


	export class create_pet_entity_request extends Sproto.SprotoTypeBase {
		
		public entityType: number; // tag 0
		public handler: number; // tag 1
		public entityModelBase: entity_model_base; // tag 2
		public attributeData: number[]; // tag 3
		public roleID: number; // tag 4
		public name: string; // tag 5
		public lv: number; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.entityType = this.de.ri ();
					break;
				case 1:
					this.handler = this.de.ri ();
					break;
				case 2:
					this.entityModelBase = this.de.ro(entity_model_base);
					break;
				case 3:
					this.attributeData = this.de.ria ();
					break;
				case 4:
					this.roleID = this.de.ri ();
					break;
				case 5:
					this.name = this.de.rs ();
					break;
				case 6:
					this.lv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.entityType != undefined) {
				this.se.wi (this.entityType, 0);
			}

			if (this.handler != undefined) {
				this.se.wi (this.handler, 1);
			}

			if (this.entityModelBase != undefined) {
				this.se.wo (this.entityModelBase, 2);
			}

			if (this.attributeData != undefined) {
				this.se.wia (this.attributeData, 3);
			}

			if (this.roleID != undefined) {
				this.se.wi (this.roleID, 4);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 5);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 6);
			}

			return this.se.Close ();
		}
	}


	export class create_role_entity_request extends Sproto.SprotoTypeBase {
		
		public entityType: number; // tag 0
		public roleID: number; // tag 1
		public handler: number; // tag 2
		public entityModelBase: entity_model_base; // tag 3
		public attributeData: number[]; // tag 4
		public attributeExData: number[]; // tag 5
		public name: string; // tag 6
		public job: number; // tag 7
		public sex: number; // tag 8
		public lv: number; // tag 9
		public bodyConfigID: number; // tag 10
		public weaponConfigID: number; // tag 11
		public wingLv: number; // tag 12
		public wingOpenStatus: boolean; // tag 13
		public title: number; // tag 14
		public guildID: number; // tag 15
		public guildName: string; // tag 16
		public warLevel: number; // tag 17
		public zhuangbei: number[]; // tag 18
		public legendDress: number; // tag 19
		public exring: number; // tag 20
		public shapeid: number; // tag 21
		public ridelv: number; // tag 22
		public elements: number[]; // tag 23
		public mainEle: number; // tag 24
		public rideshowLv: number; // tag 25
		public wingshowLv: number; // tag 26
		public owerid: number; // tag 27
		public zhuanzhiLv: number; // tag 28
		public constructor(buffer: Uint8Array = null) {
			super(29, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.entityType = this.de.ri ();
					break;
				case 1:
					this.roleID = this.de.ri ();
					break;
				case 2:
					this.handler = this.de.ri ();
					break;
				case 3:
					this.entityModelBase = this.de.ro(entity_model_base);
					break;
				case 4:
					this.attributeData = this.de.ria ();
					break;
				case 5:
					this.attributeExData = this.de.ria ();
					break;
				case 6:
					this.name = this.de.rs ();
					break;
				case 7:
					this.job = this.de.ri ();
					break;
				case 8:
					this.sex = this.de.ri ();
					break;
				case 9:
					this.lv = this.de.ri ();
					break;
				case 10:
					this.bodyConfigID = this.de.ri ();
					break;
				case 11:
					this.weaponConfigID = this.de.ri ();
					break;
				case 12:
					this.wingLv = this.de.ri ();
					break;
				case 13:
					this.wingOpenStatus = this.de.rb ();
					break;
				case 14:
					this.title = this.de.ri ();
					break;
				case 15:
					this.guildID = this.de.ri ();
					break;
				case 16:
					this.guildName = this.de.rs ();
					break;
				case 17:
					this.warLevel = this.de.ri ();
					break;
				case 18:
					this.zhuangbei = this.de.ria ();
					break;
				case 19:
					this.legendDress = this.de.ri ();
					break;
				case 20:
					this.exring = this.de.ri ();
					break;
				case 21:
					this.shapeid = this.de.ri ();
					break;
				case 22:
					this.ridelv = this.de.ri ();
					break;
				case 23:
					this.elements = this.de.ria ();
					break;
				case 24:
					this.mainEle = this.de.ri ();
					break;
				case 25:
					this.rideshowLv = this.de.ri ();
					break;
				case 26:
					this.wingshowLv = this.de.ri ();
					break;
				case 27:
					this.owerid = this.de.ri ();
					break;
				case 28:
					this.zhuanzhiLv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.entityType != undefined) {
				this.se.wi (this.entityType, 0);
			}

			if (this.roleID != undefined) {
				this.se.wi (this.roleID, 1);
			}

			if (this.handler != undefined) {
				this.se.wi (this.handler, 2);
			}

			if (this.entityModelBase != undefined) {
				this.se.wo (this.entityModelBase, 3);
			}

			if (this.attributeData != undefined) {
				this.se.wia (this.attributeData, 4);
			}

			if (this.attributeExData != undefined) {
				this.se.wia (this.attributeExData, 5);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 6);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 7);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 8);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 9);
			}

			if (this.bodyConfigID != undefined) {
				this.se.wi (this.bodyConfigID, 10);
			}

			if (this.weaponConfigID != undefined) {
				this.se.wi (this.weaponConfigID, 11);
			}

			if (this.wingLv != undefined) {
				this.se.wi (this.wingLv, 12);
			}

			if (this.wingOpenStatus != undefined) {
				this.se.wb (this.wingOpenStatus, 13);
			}

			if (this.title != undefined) {
				this.se.wi (this.title, 14);
			}

			if (this.guildID != undefined) {
				this.se.wi (this.guildID, 15);
			}

			if (this.guildName != undefined) {
				this.se.ws (this.guildName, 16);
			}

			if (this.warLevel != undefined) {
				this.se.wi (this.warLevel, 17);
			}

			if (this.zhuangbei != undefined) {
				this.se.wia (this.zhuangbei, 18);
			}

			if (this.legendDress != undefined) {
				this.se.wi (this.legendDress, 19);
			}

			if (this.exring != undefined) {
				this.se.wi (this.exring, 20);
			}

			if (this.shapeid != undefined) {
				this.se.wi (this.shapeid, 21);
			}

			if (this.ridelv != undefined) {
				this.se.wi (this.ridelv, 22);
			}

			if (this.elements != undefined) {
				this.se.wia (this.elements, 23);
			}

			if (this.mainEle != undefined) {
				this.se.wi (this.mainEle, 24);
			}

			if (this.rideshowLv != undefined) {
				this.se.wi (this.rideshowLv, 25);
			}

			if (this.wingshowLv != undefined) {
				this.se.wi (this.wingshowLv, 26);
			}

			if (this.owerid != undefined) {
				this.se.wi (this.owerid, 27);
			}

			if (this.zhuanzhiLv != undefined) {
				this.se.wi (this.zhuanzhiLv, 28);
			}

			return this.se.Close ();
		}
	}


	export class enter_map_request extends Sproto.SprotoTypeBase {
		
		public fubenID: number; // tag 0
		public mapID: number; // tag 1
		public mapX: number; // tag 2
		public mapY: number; // tag 3
		public fbType: number; // tag 4
		public fbName: string; // tag 5
		public fbDesc: string; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.fubenID = this.de.ri ();
					break;
				case 1:
					this.mapID = this.de.ri ();
					break;
				case 2:
					this.mapX = this.de.ri ();
					break;
				case 3:
					this.mapY = this.de.ri ();
					break;
				case 4:
					this.fbType = this.de.ri ();
					break;
				case 5:
					this.fbName = this.de.rs ();
					break;
				case 6:
					this.fbDesc = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.fubenID != undefined) {
				this.se.wi (this.fubenID, 0);
			}

			if (this.mapID != undefined) {
				this.se.wi (this.mapID, 1);
			}

			if (this.mapX != undefined) {
				this.se.wi (this.mapX, 2);
			}

			if (this.mapY != undefined) {
				this.se.wi (this.mapY, 3);
			}

			if (this.fbType != undefined) {
				this.se.wi (this.fbType, 4);
			}

			if (this.fbName != undefined) {
				this.se.ws (this.fbName, 5);
			}

			if (this.fbDesc != undefined) {
				this.se.ws (this.fbDesc, 6);
			}

			return this.se.Close ();
		}
	}


	export class entity_model_base extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public handle: number; // tag 1
		public configID: number; // tag 2
		public masterHandle: number; // tag 3
		public x: number; // tag 4
		public y: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.handle = this.de.ri ();
					break;
				case 2:
					this.configID = this.de.ri ();
					break;
				case 3:
					this.masterHandle = this.de.ri ();
					break;
				case 4:
					this.x = this.de.ri ();
					break;
				case 5:
					this.y = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.handle != undefined) {
				this.se.wi (this.handle, 1);
			}

			if (this.configID != undefined) {
				this.se.wi (this.configID, 2);
			}

			if (this.masterHandle != undefined) {
				this.se.wi (this.masterHandle, 3);
			}

			if (this.x != undefined) {
				this.se.wi (this.x, 4);
			}

			if (this.y != undefined) {
				this.se.wi (this.y, 5);
			}

			return this.se.Close ();
		}
	}


	export class entity_mp_update_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public mp: number; // tag 1
		public playEff: boolean; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.mp = this.de.ri ();
					break;
				case 3:
					this.playEff = this.de.rb ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.mp != undefined) {
				this.se.wi (this.mp, 1);
			}

			if (this.playEff != undefined) {
				this.se.wb (this.playEff, 3);
			}

			return this.se.Close ();
		}
	}


	export class exp_change_request extends Sproto.SprotoTypeBase {
		
		public level: number; // tag 0
		public exp: number; // tag 1
		public upexp: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.level = this.de.ri ();
					break;
				case 1:
					this.exp = this.de.ri ();
					break;
				case 2:
					this.upexp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.level != undefined) {
				this.se.wi (this.level, 0);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 1);
			}

			if (this.upexp != undefined) {
				this.se.wi (this.upexp, 2);
			}

			return this.se.Close ();
		}
	}


	export class exring extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public level: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			return this.se.Close ();
		}
	}


	export class exring_info extends Sproto.SprotoTypeBase {
		
		public sumpower: number; // tag 0
		public exrings: exring[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.sumpower = this.de.ri ();
					break;
				case 1:
					this.exrings = this.de.roa(exring);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 0);
			}

			if (this.exrings != undefined) {
				this.se.woa (this.exrings, 1);
			}

			return this.se.Close ();
		}
	}


	export class first_register_request extends Sproto.SprotoTypeBase {
		
		public constructor(buffer: Uint8Array = null) {
			super(0, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			return this.se.Close ();
		}
	}


	export class fuwen_info extends Sproto.SprotoTypeBase {
		
		public sumpower: number; // tag 0
		public level: number; // tag 1
		public ids: number[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.sumpower = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				case 2:
					this.ids = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			if (this.ids != undefined) {
				this.se.wia (this.ids, 2);
			}

			return this.se.Close ();
		}
	}


	export class godequip_info extends Sproto.SprotoTypeBase {
		
		public configidlist: number[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.configidlist = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.configidlist != undefined) {
				this.se.wia (this.configidlist, 0);
			}

			return this.se.Close ();
		}
	}


	export class gold_change_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public value: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			return this.se.Close ();
		}
	}


	export class info extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public sum: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.sum = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.sum != undefined) {
				this.se.wi (this.sum, 1);
			}

			return this.se.Close ();
		}
	}


	export class isactive_info extends Sproto.SprotoTypeBase {
		
		public sq: number; // tag 0
		public ex: number; // tag 1
		public fw: number; // tag 2
		public sz: number; // tag 3
		public xf: number; // tag 4
		public jm: number; // tag 5
		public tf: number; // tag 6
		public lz: number; // tag 7
		public constructor(buffer: Uint8Array = null) {
			super(8, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.sq = this.de.ri ();
					break;
				case 1:
					this.ex = this.de.ri ();
					break;
				case 2:
					this.fw = this.de.ri ();
					break;
				case 3:
					this.sz = this.de.ri ();
					break;
				case 4:
					this.xf = this.de.ri ();
					break;
				case 5:
					this.jm = this.de.ri ();
					break;
				case 6:
					this.tf = this.de.ri ();
					break;
				case 7:
					this.lz = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.sq != undefined) {
				this.se.wi (this.sq, 0);
			}

			if (this.ex != undefined) {
				this.se.wi (this.ex, 1);
			}

			if (this.fw != undefined) {
				this.se.wi (this.fw, 2);
			}

			if (this.sz != undefined) {
				this.se.wi (this.sz, 3);
			}

			if (this.xf != undefined) {
				this.se.wi (this.xf, 4);
			}

			if (this.jm != undefined) {
				this.se.wi (this.jm, 5);
			}

			if (this.tf != undefined) {
				this.se.wi (this.tf, 6);
			}

			if (this.lz != undefined) {
				this.se.wi (this.lz, 7);
			}

			return this.se.Close ();
		}
	}


	export class jieling_info extends Sproto.SprotoTypeBase {
		
		public configId: number; // tag 0
		public zslevel: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.configId = this.de.ri ();
					break;
				case 1:
					this.zslevel = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.configId != undefined) {
				this.se.wi (this.configId, 0);
			}

			if (this.zslevel != undefined) {
				this.se.wi (this.zslevel, 1);
			}

			return this.se.Close ();
		}
	}


	export class jingmai_info extends Sproto.SprotoTypeBase {
		
		public stage: number; // tag 0
		public level: number; // tag 1
		public skill: skill_info[]; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.stage = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				case 3:
					this.skill = this.de.roa(skill_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.stage != undefined) {
				this.se.wi (this.stage, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			if (this.skill != undefined) {
				this.se.woa (this.skill, 3);
			}

			return this.se.Close ();
		}
	}


	export class lizhuang_info extends Sproto.SprotoTypeBase {
		
		public num2: number; // tag 1
		public star: number; // tag 2
		public item: item_data; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 1:
					this.num2 = this.de.ri ();
					break;
				case 2:
					this.star = this.de.ri ();
					break;
				case 3:
					this.item = this.de.ro(item_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.num2 != undefined) {
				this.se.wi (this.num2, 1);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 2);
			}

			if (this.item != undefined) {
				this.se.wo (this.item, 3);
			}

			return this.se.Close ();
		}
	}


	export class move_entity_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public endX: number; // tag 1
		public endY: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.endX = this.de.ri ();
					break;
				case 2:
					this.endY = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.endX != undefined) {
				this.se.wi (this.endX, 1);
			}

			if (this.endY != undefined) {
				this.se.wi (this.endY, 2);
			}

			return this.se.Close ();
		}
	}


	export class record_data extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public itemid: number; // tag 1
		public count: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.itemid = this.de.ri ();
					break;
				case 2:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.itemid != undefined) {
				this.se.wi (this.itemid, 1);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 2);
			}

			return this.se.Close ();
		}
	}


	export class remove_entity_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			return this.se.Close ();
		}
	}


	export class scActorBase_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public actorid: number; // tag 1
		public serverid: number; // tag 2
		public actorname: string; // tag 3
		public level: number; // tag 4
		public exp: number; // tag 5
		public power: number; // tag 6
		public gold: number; // tag 7
		public yuanbao: number; // tag 8
		public vip: number; // tag 9
		public soul: number; // tag 10
		public bagnum: number; // tag 11
		public feats: number; // tag 12
		public redName: number; // tag 13
		public prestige: number; // tag 14
		public prestige_level: number; // tag 15
		public gongnengYugao: number; // tag 16
		public clientvalue: number; // tag 17
		public shopNorefrush: boolean; // tag 18
		public crossTiantiGlory: number; // tag 19
		public zhenqi: number; // tag 20
		public sharecoin: number; // tag 21
		public ticket: number; // tag 22
		public ticketTotal: number; // tag 23
		public constructor(buffer: Uint8Array = null) {
			super(24, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.actorid = this.de.ri ();
					break;
				case 2:
					this.serverid = this.de.ri ();
					break;
				case 3:
					this.actorname = this.de.rs ();
					break;
				case 4:
					this.level = this.de.ri ();
					break;
				case 5:
					this.exp = this.de.ri ();
					break;
				case 6:
					this.power = this.de.ri ();
					break;
				case 7:
					this.gold = this.de.ri ();
					break;
				case 8:
					this.yuanbao = this.de.ri ();
					break;
				case 9:
					this.vip = this.de.ri ();
					break;
				case 10:
					this.soul = this.de.ri ();
					break;
				case 11:
					this.bagnum = this.de.ri ();
					break;
				case 12:
					this.feats = this.de.ri ();
					break;
				case 13:
					this.redName = this.de.ri ();
					break;
				case 14:
					this.prestige = this.de.ri ();
					break;
				case 15:
					this.prestige_level = this.de.ri ();
					break;
				case 16:
					this.gongnengYugao = this.de.ri ();
					break;
				case 17:
					this.clientvalue = this.de.ri ();
					break;
				case 18:
					this.shopNorefrush = this.de.rb ();
					break;
				case 19:
					this.crossTiantiGlory = this.de.ri ();
					break;
				case 20:
					this.zhenqi = this.de.ri ();
					break;
				case 21:
					this.sharecoin = this.de.ri ();
					break;
				case 22:
					this.ticket = this.de.ri ();
					break;
				case 23:
					this.ticketTotal = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 1);
			}

			if (this.serverid != undefined) {
				this.se.wi (this.serverid, 2);
			}

			if (this.actorname != undefined) {
				this.se.ws (this.actorname, 3);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 4);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 5);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 6);
			}

			if (this.gold != undefined) {
				this.se.wi (this.gold, 7);
			}

			if (this.yuanbao != undefined) {
				this.se.wi (this.yuanbao, 8);
			}

			if (this.vip != undefined) {
				this.se.wi (this.vip, 9);
			}

			if (this.soul != undefined) {
				this.se.wi (this.soul, 10);
			}

			if (this.bagnum != undefined) {
				this.se.wi (this.bagnum, 11);
			}

			if (this.feats != undefined) {
				this.se.wi (this.feats, 12);
			}

			if (this.redName != undefined) {
				this.se.wi (this.redName, 13);
			}

			if (this.prestige != undefined) {
				this.se.wi (this.prestige, 14);
			}

			if (this.prestige_level != undefined) {
				this.se.wi (this.prestige_level, 15);
			}

			if (this.gongnengYugao != undefined) {
				this.se.wi (this.gongnengYugao, 16);
			}

			if (this.clientvalue != undefined) {
				this.se.wi (this.clientvalue, 17);
			}

			if (this.shopNorefrush != undefined) {
				this.se.wb (this.shopNorefrush, 18);
			}

			if (this.crossTiantiGlory != undefined) {
				this.se.wi (this.crossTiantiGlory, 19);
			}

			if (this.zhenqi != undefined) {
				this.se.wi (this.zhenqi, 20);
			}

			if (this.sharecoin != undefined) {
				this.se.wi (this.sharecoin, 21);
			}

			if (this.ticket != undefined) {
				this.se.wi (this.ticket, 22);
			}

			if (this.ticketTotal != undefined) {
				this.se.wi (this.ticketTotal, 23);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_aritifact_request extends Sproto.SprotoTypeBase {
		
		public info: aritifact_info; // tag 0
		public attrs: attribute_data[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.ro(aritifact_info);
					break;
				case 1:
					this.attrs = this.de.roa(attribute_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.wo (this.info, 0);
			}

			if (this.attrs != undefined) {
				this.se.woa (this.attrs, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_exring_request extends Sproto.SprotoTypeBase {
		
		public info: exring_info; // tag 0
		public ringsoul: jieling_info[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.ro(exring_info);
					break;
				case 1:
					this.ringsoul = this.de.roa(jieling_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.wo (this.info, 0);
			}

			if (this.ringsoul != undefined) {
				this.se.woa (this.ringsoul, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_fuwen_request extends Sproto.SprotoTypeBase {
		
		public info: fuwen_info[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.roa(fuwen_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.woa (this.info, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_godequip_request extends Sproto.SprotoTypeBase {
		
		public info: item_data[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.roa(item_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.woa (this.info, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_jingmai_request extends Sproto.SprotoTypeBase {
		
		public info: jingmai_info[]; // tag 0
		public sumpower: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.roa(jingmai_info);
					break;
				case 1:
					this.sumpower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.woa (this.info, 0);
			}

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_lizhuang_request extends Sproto.SprotoTypeBase {
		
		public info: lizhuang_info[]; // tag 0
		public sumpower: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.roa(lizhuang_info);
					break;
				case 1:
					this.sumpower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.woa (this.info, 0);
			}

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_skillmiji_request extends Sproto.SprotoTypeBase {
		
		public info: skillmiji_info; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.ro(skillmiji_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.wo (this.info, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_base_info_talent_request extends Sproto.SprotoTypeBase {
		
		public info: talent[]; // tag 0
		public sumpower: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.info = this.de.roa(talent);
					break;
				case 1:
					this.sumpower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.info != undefined) {
				this.se.woa (this.info, 0);
			}

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_actor_power_request extends Sproto.SprotoTypeBase {
		
		public power: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.power = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.power != undefined) {
				this.se.wi (this.power, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_currency_change_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public value: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_element_set_res_request extends Sproto.SprotoTypeBase {
		
		public roleid: number; // tag 0
		public mainEle: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleid = this.de.ri ();
					break;
				case 1:
					this.mainEle = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleid != undefined) {
				this.se.wi (this.roleid, 0);
			}

			if (this.mainEle != undefined) {
				this.se.wi (this.mainEle, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_get_actor_module_isactive_request extends Sproto.SprotoTypeBase {
		
		public isactive: isactive_info; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.isactive = this.de.ro(isactive_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.isactive != undefined) {
				this.se.wo (this.isactive, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_rank_player_info_request extends Sproto.SprotoTypeBase {
		
		public infos: info[]; // tag 0
		public shapeid: number; // tag 1
		public zzid: number; // tag 2
		public level: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.infos = this.de.roa(info);
					break;
				case 1:
					this.shapeid = this.de.ri ();
					break;
				case 2:
					this.zzid = this.de.ri ();
					break;
				case 3:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.infos != undefined) {
				this.se.woa (this.infos, 0);
			}

			if (this.shapeid != undefined) {
				this.se.wi (this.shapeid, 1);
			}

			if (this.zzid != undefined) {
				this.se.wi (this.zzid, 2);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 3);
			}

			return this.se.Close ();
		}
	}


	export class sc_record_add_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public record: record_data; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.record = this.de.ro(record_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.record != undefined) {
				this.se.wo (this.record, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_record_datas_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public record: record_data[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.record = this.de.roa(record_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.record != undefined) {
				this.se.woa (this.record, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_rename_result_request extends Sproto.SprotoTypeBase {
		
		public result: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.result = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.result != undefined) {
				this.se.wi (this.result, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_set_is_open_payfrist_request extends Sproto.SprotoTypeBase {
		
		public value: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.value != undefined) {
				this.se.wi (this.value, 0);
			}

			return this.se.Close ();
		}
	}


	export class sc_show_other_actor_request extends Sproto.SprotoTypeBase {
		
		public actorData: actor_base_data; // tag 0
		public roleList: role_data[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorData = this.de.ro(actor_base_data);
					break;
				case 1:
					this.roleList = this.de.roa(role_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorData != undefined) {
				this.se.wo (this.actorData, 0);
			}

			if (this.roleList != undefined) {
				this.se.woa (this.roleList, 1);
			}

			return this.se.Close ();
		}
	}


	export class sc_zs_point_info_request extends Sproto.SprotoTypeBase {
		
		public point: number; // tag 0
		public points: number[]; // tag 1
		public roldid: number; // tag 2
		public power: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.point = this.de.ri ();
					break;
				case 1:
					this.points = this.de.ria ();
					break;
				case 2:
					this.roldid = this.de.ri ();
					break;
				case 3:
					this.power = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.point != undefined) {
				this.se.wi (this.point, 0);
			}

			if (this.points != undefined) {
				this.se.wia (this.points, 1);
			}

			if (this.roldid != undefined) {
				this.se.wi (this.roldid, 2);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 3);
			}

			return this.se.Close ();
		}
	}


	export class shape_update_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public shapeid: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.shapeid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.shapeid != undefined) {
				this.se.wi (this.shapeid, 1);
			}

			return this.se.Close ();
		}
	}


	export class show_server_tip_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			return this.se.Close ();
		}
	}


	export class skill_info extends Sproto.SprotoTypeBase {
		
		public skillid: number; // tag 0
		public type: number; // tag 1
		public value: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.skillid = this.de.ri ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				case 2:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.skillid != undefined) {
				this.se.wi (this.skillid, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 2);
			}

			return this.se.Close ();
		}
	}


	export class skillmiji_info extends Sproto.SprotoTypeBase {
		
		public configidlist: number[]; // tag 0
		public sumpower: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.configidlist = this.de.ria ();
					break;
				case 1:
					this.sumpower = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.configidlist != undefined) {
				this.se.wia (this.configidlist, 0);
			}

			if (this.sumpower != undefined) {
				this.se.wi (this.sumpower, 1);
			}

			return this.se.Close ();
		}
	}


	export class stop_move_entity_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public endX: number; // tag 1
		public endY: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.endX = this.de.ri ();
					break;
				case 2:
					this.endY = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.endX != undefined) {
				this.se.wi (this.endX, 1);
			}

			if (this.endY != undefined) {
				this.se.wi (this.endY, 2);
			}

			return this.se.Close ();
		}
	}


	export class sub_role_att_change_request extends Sproto.SprotoTypeBase {
		
		public roleID: number; // tag 0
		public attributeData: number[]; // tag 1
		public power: number; // tag 2
		public elements: number[]; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.roleID = this.de.ri ();
					break;
				case 1:
					this.attributeData = this.de.ria ();
					break;
				case 2:
					this.power = this.de.ri ();
					break;
				case 3:
					this.elements = this.de.ria ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleID != undefined) {
				this.se.wi (this.roleID, 0);
			}

			if (this.attributeData != undefined) {
				this.se.wia (this.attributeData, 1);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 2);
			}

			if (this.elements != undefined) {
				this.se.wia (this.elements, 3);
			}

			return this.se.Close ();
		}
	}


	export class sub_roles_request extends Sproto.SprotoTypeBase {
		
		public roleList: role_data[]; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 1:
					this.roleList = this.de.roa(role_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.roleList != undefined) {
				this.se.woa (this.roleList, 1);
			}

			return this.se.Close ();
		}
	}


	export class sync_entity_pos_request extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public type: number; // tag 1
		public x: number; // tag 2
		public y: number; // tag 3
		public arg1: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.type = this.de.ri ();
					break;
				case 2:
					this.x = this.de.ri ();
					break;
				case 3:
					this.y = this.de.ri ();
					break;
				case 4:
					this.arg1 = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.type != undefined) {
				this.se.wi (this.type, 1);
			}

			if (this.x != undefined) {
				this.se.wi (this.x, 2);
			}

			if (this.y != undefined) {
				this.se.wi (this.y, 3);
			}

			if (this.arg1 != undefined) {
				this.se.wi (this.arg1, 4);
			}

			return this.se.Close ();
		}
	}


	export class talent extends Sproto.SprotoTypeBase {
		
		public talentid: number; // tag 0
		public talentlevel: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.talentid = this.de.ri ();
					break;
				case 1:
					this.talentlevel = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.talentid != undefined) {
				this.se.wi (this.talentid, 0);
			}

			if (this.talentlevel != undefined) {
				this.se.wi (this.talentlevel, 1);
			}

			return this.se.Close ();
		}
	}


	export class talent_info extends Sproto.SprotoTypeBase {
		
		public talents: talent[]; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.talents = this.de.roa(talent);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.talents != undefined) {
				this.se.woa (this.talents, 0);
			}

			return this.se.Close ();
		}
	}


}

