// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_buy_wanba_item_request extends Sproto.SprotoTypeBase {
		
		public goodsid: number; // tag 0
		public money: number; // tag 1
		public zoneid: number; // tag 2
		public appid: string; // tag 3
		public openid: string; // tag 4
		public pf: string; // tag 5
		public openkey: string; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.goodsid = this.de.ri ();
					break;
				case 1:
					this.money = this.de.ri ();
					break;
				case 2:
					this.zoneid = this.de.ri ();
					break;
				case 3:
					this.appid = this.de.rs ();
					break;
				case 4:
					this.openid = this.de.rs ();
					break;
				case 5:
					this.pf = this.de.rs ();
					break;
				case 6:
					this.openkey = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.goodsid != undefined) {
				this.se.wi (this.goodsid, 0);
			}

			if (this.money != undefined) {
				this.se.wi (this.money, 1);
			}

			if (this.zoneid != undefined) {
				this.se.wi (this.zoneid, 2);
			}

			if (this.appid != undefined) {
				this.se.ws (this.appid, 3);
			}

			if (this.openid != undefined) {
				this.se.ws (this.openid, 4);
			}

			if (this.pf != undefined) {
				this.se.ws (this.pf, 5);
			}

			if (this.openkey != undefined) {
				this.se.ws (this.openkey, 6);
			}

			return this.se.Close ();
		}
	}


	export class cs_buy_wanba_item_response extends Sproto.SprotoTypeBase {
		
		public ret: number; // tag 0
		public price: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.ret = this.de.ri ();
					break;
				case 1:
					this.price = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.ret != undefined) {
				this.se.wi (this.ret, 0);
			}

			if (this.price != undefined) {
				this.se.wi (this.price, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_buy_xiaoyouxi_item_request extends Sproto.SprotoTypeBase {
		
		public goodsid: number; // tag 0
		public appid: string; // tag 1
		public openid: string; // tag 2
		public pf: string; // tag 3
		public session_key: string; // tag 4
		public orderid: string; // tag 5
		public pay_amount: number; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.goodsid = this.de.ri ();
					break;
				case 1:
					this.appid = this.de.rs ();
					break;
				case 2:
					this.openid = this.de.rs ();
					break;
				case 3:
					this.pf = this.de.rs ();
					break;
				case 4:
					this.session_key = this.de.rs ();
					break;
				case 5:
					this.orderid = this.de.rs ();
					break;
				case 6:
					this.pay_amount = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.goodsid != undefined) {
				this.se.wi (this.goodsid, 0);
			}

			if (this.appid != undefined) {
				this.se.ws (this.appid, 1);
			}

			if (this.openid != undefined) {
				this.se.ws (this.openid, 2);
			}

			if (this.pf != undefined) {
				this.se.ws (this.pf, 3);
			}

			if (this.session_key != undefined) {
				this.se.ws (this.session_key, 4);
			}

			if (this.orderid != undefined) {
				this.se.ws (this.orderid, 5);
			}

			if (this.pay_amount != undefined) {
				this.se.wi (this.pay_amount, 6);
			}

			return this.se.Close ();
		}
	}


	export class cs_buy_xiaoyouxi_item_response extends Sproto.SprotoTypeBase {
		
		public ret: number; // tag 0
		public price: number; // tag 1
		public orderid: string; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.ret = this.de.ri ();
					break;
				case 1:
					this.price = this.de.ri ();
					break;
				case 2:
					this.orderid = this.de.rs ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.ret != undefined) {
				this.se.wi (this.ret, 0);
			}

			if (this.price != undefined) {
				this.se.wi (this.price, 1);
			}

			if (this.orderid != undefined) {
				this.se.ws (this.orderid, 2);
			}

			return this.se.Close ();
		}
	}


	export class cs_buy_yyb_item_request extends Sproto.SprotoTypeBase {
		
		public goodsid: number; // tag 0
		public appid: string; // tag 1
		public openid: string; // tag 2
		public openkey: string; // tag 3
		public pf: string; // tag 4
		public pfkey: string; // tag 5
		public zoneid: number; // tag 6
		public constructor(buffer: Uint8Array = null) {
			super(7, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.goodsid = this.de.ri ();
					break;
				case 1:
					this.appid = this.de.rs ();
					break;
				case 2:
					this.openid = this.de.rs ();
					break;
				case 3:
					this.openkey = this.de.rs ();
					break;
				case 4:
					this.pf = this.de.rs ();
					break;
				case 5:
					this.pfkey = this.de.rs ();
					break;
				case 6:
					this.zoneid = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.goodsid != undefined) {
				this.se.wi (this.goodsid, 0);
			}

			if (this.appid != undefined) {
				this.se.ws (this.appid, 1);
			}

			if (this.openid != undefined) {
				this.se.ws (this.openid, 2);
			}

			if (this.openkey != undefined) {
				this.se.ws (this.openkey, 3);
			}

			if (this.pf != undefined) {
				this.se.ws (this.pf, 4);
			}

			if (this.pfkey != undefined) {
				this.se.ws (this.pfkey, 5);
			}

			if (this.zoneid != undefined) {
				this.se.wi (this.zoneid, 6);
			}

			return this.se.Close ();
		}
	}


	export class cs_buy_yyb_item_response extends Sproto.SprotoTypeBase {
		
		public ret: number; // tag 0
		public price: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.ret = this.de.ri ();
					break;
				case 1:
					this.price = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.ret != undefined) {
				this.se.wi (this.ret, 0);
			}

			if (this.price != undefined) {
				this.se.wi (this.price, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_recharge_get_awards_request extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public id: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			return this.se.Close ();
		}
	}


	export class cs_recharge_gift_reward_request extends Sproto.SprotoTypeBase {
		
		public index: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.index = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.index != undefined) {
				this.se.wi (this.index, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_recharge_test_request extends Sproto.SprotoTypeBase {
		
		public rechargeId: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.rechargeId = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.rechargeId != undefined) {
				this.se.wi (this.rechargeId, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_recharge_test_invest_request extends Sproto.SprotoTypeBase {
		
		public index: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.index = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.index != undefined) {
				this.se.wi (this.index, 0);
			}

			return this.se.Close ();
		}
	}


	export class cs_recharge_test_month_request extends Sproto.SprotoTypeBase {
		
		public index: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.index = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.index != undefined) {
				this.se.wi (this.index, 0);
			}

			return this.se.Close ();
		}
	}


}

