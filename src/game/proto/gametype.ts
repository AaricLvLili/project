// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class actor_base_data extends Sproto.SprotoTypeBase {
		
		public actorid: number; // tag 0
		public name: string; // tag 1
		public level: number; // tag 2
		public zhuan: number; // tag 3
		public vip: number; // tag 4
		public power: number; // tag 5
		public guildName: string; // tag 6
		public titles: title_data[]; // tag 7
		public dressTimeInfo: dress_time_info[]; // tag 8
		public constructor(buffer: Uint8Array = null) {
			super(9, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.actorid = this.de.ri ();
					break;
				case 1:
					this.name = this.de.rs ();
					break;
				case 2:
					this.level = this.de.ri ();
					break;
				case 3:
					this.zhuan = this.de.ri ();
					break;
				case 4:
					this.vip = this.de.ri ();
					break;
				case 5:
					this.power = this.de.ri ();
					break;
				case 6:
					this.guildName = this.de.rs ();
					break;
				case 7:
					this.titles = this.de.roa(title_data);
					break;
				case 8:
					this.dressTimeInfo = this.de.roa(dress_time_info);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.actorid != undefined) {
				this.se.wi (this.actorid, 0);
			}

			if (this.name != undefined) {
				this.se.ws (this.name, 1);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 2);
			}

			if (this.zhuan != undefined) {
				this.se.wi (this.zhuan, 3);
			}

			if (this.vip != undefined) {
				this.se.wi (this.vip, 4);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 5);
			}

			if (this.guildName != undefined) {
				this.se.ws (this.guildName, 6);
			}

			if (this.titles != undefined) {
				this.se.woa (this.titles, 7);
			}

			if (this.dressTimeInfo != undefined) {
				this.se.woa (this.dressTimeInfo, 8);
			}

			return this.se.Close ();
		}
	}


	export class actor_simple_data extends Sproto.SprotoTypeBase {
		
		public name: string; // tag 0
		public job: number; // tag 1
		public sex: number; // tag 2
		public zsLv: number; // tag 3
		public lv: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.name = this.de.rs ();
					break;
				case 1:
					this.job = this.de.ri ();
					break;
				case 2:
					this.sex = this.de.ri ();
					break;
				case 3:
					this.zsLv = this.de.ri ();
					break;
				case 4:
					this.lv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.name != undefined) {
				this.se.ws (this.name, 0);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 1);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 2);
			}

			if (this.zsLv != undefined) {
				this.se.wi (this.zsLv, 3);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 4);
			}

			return this.se.Close ();
		}
	}


	export class attribute_data extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public value: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.value = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.value != undefined) {
				this.se.wi (this.value, 1);
			}

			return this.se.Close ();
		}
	}


	export class dress_time_info extends Sproto.SprotoTypeBase {
		
		public dressId: number; // tag 0
		public invalidtime: number; // tag 2
		public dressLevel: number; // tag 3
		public dressExp: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.dressId = this.de.ri ();
					break;
				case 2:
					this.invalidtime = this.de.ri ();
					break;
				case 3:
					this.dressLevel = this.de.ri ();
					break;
				case 4:
					this.dressExp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.dressId != undefined) {
				this.se.wi (this.dressId, 0);
			}

			if (this.invalidtime != undefined) {
				this.se.wi (this.invalidtime, 2);
			}

			if (this.dressLevel != undefined) {
				this.se.wi (this.dressLevel, 3);
			}

			if (this.dressExp != undefined) {
				this.se.wi (this.dressExp, 4);
			}

			return this.se.Close ();
		}
	}


	export class equip_data extends Sproto.SprotoTypeBase {
		
		public strengthen: number; // tag 0
		public star: number; // tag 1
		public gem: number; // tag 2
		public item: item_data; // tag 3
		public zhuling: number; // tag 4
		public tupo: number; // tag 5
		public bless: number; // tag 6
		public num2: number; // tag 7
		public goditem: item_data; // tag 8
		public blessexp: number; // tag 9
		public blessstar: number; // tag 10
		public blesslv: number; // tag 11
		public constructor(buffer: Uint8Array = null) {
			super(12, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.strengthen = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.gem = this.de.ri ();
					break;
				case 3:
					this.item = this.de.ro(item_data);
					break;
				case 4:
					this.zhuling = this.de.ri ();
					break;
				case 5:
					this.tupo = this.de.ri ();
					break;
				case 6:
					this.bless = this.de.ri ();
					break;
				case 7:
					this.num2 = this.de.ri ();
					break;
				case 8:
					this.goditem = this.de.ro(item_data);
					break;
				case 9:
					this.blessexp = this.de.ri ();
					break;
				case 10:
					this.blessstar = this.de.ri ();
					break;
				case 11:
					this.blesslv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.strengthen != undefined) {
				this.se.wi (this.strengthen, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.gem != undefined) {
				this.se.wi (this.gem, 2);
			}

			if (this.item != undefined) {
				this.se.wo (this.item, 3);
			}

			if (this.zhuling != undefined) {
				this.se.wi (this.zhuling, 4);
			}

			if (this.tupo != undefined) {
				this.se.wi (this.tupo, 5);
			}

			if (this.bless != undefined) {
				this.se.wi (this.bless, 6);
			}

			if (this.num2 != undefined) {
				this.se.wi (this.num2, 7);
			}

			if (this.goditem != undefined) {
				this.se.wo (this.goditem, 8);
			}

			if (this.blessexp != undefined) {
				this.se.wi (this.blessexp, 9);
			}

			if (this.blessstar != undefined) {
				this.se.wi (this.blessstar, 10);
			}

			if (this.blesslv != undefined) {
				this.se.wi (this.blesslv, 11);
			}

			return this.se.Close ();
		}
	}


	export class fuwen_data extends Sproto.SprotoTypeBase {
		
		public openStatus: boolean; // tag 0
		public level: number; // tag 1
		public equipDatas: item_data[]; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.openStatus = this.de.rb ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				case 2:
					this.equipDatas = this.de.roa(item_data);
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.openStatus != undefined) {
				this.se.wb (this.openStatus, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			if (this.equipDatas != undefined) {
				this.se.woa (this.equipDatas, 2);
			}

			return this.se.Close ();
		}
	}


	export class item_data extends Sproto.SprotoTypeBase {
		
		public handle: number; // tag 0
		public configID: number; // tag 1
		public count: number; // tag 2
		public att: attribute_data[]; // tag 3
		public invalidtime: number; // tag 4
		public constructor(buffer: Uint8Array = null) {
			super(5, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.handle = this.de.ri ();
					break;
				case 1:
					this.configID = this.de.ri ();
					break;
				case 2:
					this.count = this.de.ri ();
					break;
				case 3:
					this.att = this.de.roa(attribute_data);
					break;
				case 4:
					this.invalidtime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.handle != undefined) {
				this.se.wi (this.handle, 0);
			}

			if (this.configID != undefined) {
				this.se.wi (this.configID, 1);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 2);
			}

			if (this.att != undefined) {
				this.se.woa (this.att, 3);
			}

			if (this.invalidtime != undefined) {
				this.se.wi (this.invalidtime, 4);
			}

			return this.se.Close ();
		}
	}


	export class jingmai_data extends Sproto.SprotoTypeBase {
		
		public level: number; // tag 0
		public stage: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.level = this.de.ri ();
					break;
				case 1:
					this.stage = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.level != undefined) {
				this.se.wi (this.level, 0);
			}

			if (this.stage != undefined) {
				this.se.wi (this.stage, 1);
			}

			return this.se.Close ();
		}
	}


	export class legend_data extends Sproto.SprotoTypeBase {
		
		public isActivate: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.isActivate = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.isActivate != undefined) {
				this.se.wi (this.isActivate, 0);
			}

			return this.se.Close ();
		}
	}


	export class long_hun_data extends Sproto.SprotoTypeBase {
		
		public stage: number; // tag 0
		public level: number; // tag 1
		public exp: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.stage = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				case 2:
					this.exp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.stage != undefined) {
				this.se.wi (this.stage, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 2);
			}

			return this.se.Close ();
		}
	}


	export class longzhuang_data extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public lv: number; // tag 1
		public star: number; // tag 2
		public exp: number; // tag 3
		public constructor(buffer: Uint8Array = null) {
			super(4, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.lv = this.de.ri ();
					break;
				case 2:
					this.star = this.de.ri ();
					break;
				case 3:
					this.exp = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.lv != undefined) {
				this.se.wi (this.lv, 1);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 2);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 3);
			}

			return this.se.Close ();
		}
	}


	export class position extends Sproto.SprotoTypeBase {
		
		public x: number; // tag 0
		public y: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.x = this.de.ri ();
					break;
				case 1:
					this.y = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.x != undefined) {
				this.se.wi (this.x, 0);
			}

			if (this.y != undefined) {
				this.se.wi (this.y, 1);
			}

			return this.se.Close ();
		}
	}


	export class rank_subrole extends Sproto.SprotoTypeBase {
		
		public job: number; // tag 0
		public sex: number; // tag 1
		public clothID: number; // tag 2
		public swordID: number; // tag 3
		public wingOpenStatus: boolean; // tag 4
		public wingLevel: number; // tag 5
		public zhuangbei: number[]; // tag 6
		public legendDress: number; // tag 7
		public exring: number; // tag 8
		public ride: number; // tag 9
		public mainEle: number; // tag 10
		public rideshow: number; // tag 11
		public wingshow: number; // tag 12
		public zhuanzhiLv: number; // tag 13
		public constructor(buffer: Uint8Array = null) {
			super(14, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.job = this.de.ri ();
					break;
				case 1:
					this.sex = this.de.ri ();
					break;
				case 2:
					this.clothID = this.de.ri ();
					break;
				case 3:
					this.swordID = this.de.ri ();
					break;
				case 4:
					this.wingOpenStatus = this.de.rb ();
					break;
				case 5:
					this.wingLevel = this.de.ri ();
					break;
				case 6:
					this.zhuangbei = this.de.ria ();
					break;
				case 7:
					this.legendDress = this.de.ri ();
					break;
				case 8:
					this.exring = this.de.ri ();
					break;
				case 9:
					this.ride = this.de.ri ();
					break;
				case 10:
					this.mainEle = this.de.ri ();
					break;
				case 11:
					this.rideshow = this.de.ri ();
					break;
				case 12:
					this.wingshow = this.de.ri ();
					break;
				case 13:
					this.zhuanzhiLv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.job != undefined) {
				this.se.wi (this.job, 0);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 1);
			}

			if (this.clothID != undefined) {
				this.se.wi (this.clothID, 2);
			}

			if (this.swordID != undefined) {
				this.se.wi (this.swordID, 3);
			}

			if (this.wingOpenStatus != undefined) {
				this.se.wb (this.wingOpenStatus, 4);
			}

			if (this.wingLevel != undefined) {
				this.se.wi (this.wingLevel, 5);
			}

			if (this.zhuangbei != undefined) {
				this.se.wia (this.zhuangbei, 6);
			}

			if (this.legendDress != undefined) {
				this.se.wi (this.legendDress, 7);
			}

			if (this.exring != undefined) {
				this.se.wi (this.exring, 8);
			}

			if (this.ride != undefined) {
				this.se.wi (this.ride, 9);
			}

			if (this.mainEle != undefined) {
				this.se.wi (this.mainEle, 10);
			}

			if (this.rideshow != undefined) {
				this.se.wi (this.rideshow, 11);
			}

			if (this.wingshow != undefined) {
				this.se.wi (this.wingshow, 12);
			}

			if (this.zhuanzhiLv != undefined) {
				this.se.wi (this.zhuanzhiLv, 13);
			}

			return this.se.Close ();
		}
	}


	export class reward_data extends Sproto.SprotoTypeBase {
		
		public type: number; // tag 0
		public id: number; // tag 1
		public count: number; // tag 2
		public constructor(buffer: Uint8Array = null) {
			super(3, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.type = this.de.ri ();
					break;
				case 1:
					this.id = this.de.ri ();
					break;
				case 2:
					this.count = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.type != undefined) {
				this.se.wi (this.type, 0);
			}

			if (this.id != undefined) {
				this.se.wi (this.id, 1);
			}

			if (this.count != undefined) {
				this.se.wi (this.count, 2);
			}

			return this.se.Close ();
		}
	}


	export class role_data extends Sproto.SprotoTypeBase {
		
		public title: number; // tag 0
		public index: number; // tag 1
		public job: number; // tag 2
		public sex: number; // tag 3
		public power: number; // tag 4
		public skillDatas: number[]; // tag 5
		public fightSkill: number[]; // tag 6
		public equipsData: equip_data[]; // tag 8
		public wingsData: wings_data; // tag 10
		public jingmai_Data: jingmai_data; // tag 11
		public attributeData: number[]; // tag 16
		public attributeExData: number[]; // tag 17
		public zhuZaiData: zhuzai_data[]; // tag 18
		public longzhuang: longzhuang_data[]; // tag 19
		public zhuangbei: number[]; // tag 20
		public fuwen: fuwen_data; // tag 21
		public legendDress: number; // tag 22
		public exring: number; // tag 23
		public zzjingmai_Data: jingmai_data; // tag 24
		public power2: number; // tag 25
		public ride: number; // tag 26
		public elements: number[]; // tag 27
		public mainEle: number; // tag 28
		public rideshow: number; // tag 29
		public zhuanzhiLv: number; // tag 30
		public constructor(buffer: Uint8Array = null) {
			super(28, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.title = this.de.ri ();
					break;
				case 1:
					this.index = this.de.ri ();
					break;
				case 2:
					this.job = this.de.ri ();
					break;
				case 3:
					this.sex = this.de.ri ();
					break;
				case 4:
					this.power = this.de.ri ();
					break;
				case 5:
					this.skillDatas = this.de.ria ();
					break;
				case 6:
					this.fightSkill = this.de.ria ();
					break;
				case 8:
					this.equipsData = this.de.roa(equip_data);
					break;
				case 10:
					this.wingsData = this.de.ro(wings_data);
					break;
				case 11:
					this.jingmai_Data = this.de.ro(jingmai_data);
					break;
				case 16:
					this.attributeData = this.de.ria ();
					break;
				case 17:
					this.attributeExData = this.de.ria ();
					break;
				case 18:
					this.zhuZaiData = this.de.roa(zhuzai_data);
					break;
				case 19:
					this.longzhuang = this.de.roa(longzhuang_data);
					break;
				case 20:
					this.zhuangbei = this.de.ria ();
					break;
				case 21:
					this.fuwen = this.de.ro(fuwen_data);
					break;
				case 22:
					this.legendDress = this.de.ri ();
					break;
				case 23:
					this.exring = this.de.ri ();
					break;
				case 24:
					this.zzjingmai_Data = this.de.ro(jingmai_data);
					break;
				case 25:
					this.power2 = this.de.ri ();
					break;
				case 26:
					this.ride = this.de.ri ();
					break;
				case 27:
					this.elements = this.de.ria ();
					break;
				case 28:
					this.mainEle = this.de.ri ();
					break;
				case 29:
					this.rideshow = this.de.ri ();
					break;
				case 30:
					this.zhuanzhiLv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.title != undefined) {
				this.se.wi (this.title, 0);
			}

			if (this.index != undefined) {
				this.se.wi (this.index, 1);
			}

			if (this.job != undefined) {
				this.se.wi (this.job, 2);
			}

			if (this.sex != undefined) {
				this.se.wi (this.sex, 3);
			}

			if (this.power != undefined) {
				this.se.wi (this.power, 4);
			}

			if (this.skillDatas != undefined) {
				this.se.wia (this.skillDatas, 5);
			}

			if (this.fightSkill != undefined) {
				this.se.wia (this.fightSkill, 6);
			}

			if (this.equipsData != undefined) {
				this.se.woa (this.equipsData, 8);
			}

			if (this.wingsData != undefined) {
				this.se.wo (this.wingsData, 10);
			}

			if (this.jingmai_Data != undefined) {
				this.se.wo (this.jingmai_Data, 11);
			}

			if (this.attributeData != undefined) {
				this.se.wia (this.attributeData, 16);
			}

			if (this.attributeExData != undefined) {
				this.se.wia (this.attributeExData, 17);
			}

			if (this.zhuZaiData != undefined) {
				this.se.woa (this.zhuZaiData, 18);
			}

			if (this.longzhuang != undefined) {
				this.se.woa (this.longzhuang, 19);
			}

			if (this.zhuangbei != undefined) {
				this.se.wia (this.zhuangbei, 20);
			}

			if (this.fuwen != undefined) {
				this.se.wo (this.fuwen, 21);
			}

			if (this.legendDress != undefined) {
				this.se.wi (this.legendDress, 22);
			}

			if (this.exring != undefined) {
				this.se.wi (this.exring, 23);
			}

			if (this.zzjingmai_Data != undefined) {
				this.se.wo (this.zzjingmai_Data, 24);
			}

			if (this.power2 != undefined) {
				this.se.wi (this.power2, 25);
			}

			if (this.ride != undefined) {
				this.se.wi (this.ride, 26);
			}

			if (this.elements != undefined) {
				this.se.wia (this.elements, 27);
			}

			if (this.mainEle != undefined) {
				this.se.wi (this.mainEle, 28);
			}

			if (this.rideshow != undefined) {
				this.se.wi (this.rideshow, 29);
			}

			if (this.zhuanzhiLv != undefined) {
				this.se.wi (this.zhuanzhiLv, 30);
			}

			return this.se.Close ();
		}
	}


	export class rune_data extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public constructor(buffer: Uint8Array = null) {
			super(1, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			return this.se.Close ();
		}
	}


	export class title_data extends Sproto.SprotoTypeBase {
		
		public titleid: number; // tag 0
		public titleEndTime: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.titleid = this.de.ri ();
					break;
				case 1:
					this.titleEndTime = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.titleid != undefined) {
				this.se.wi (this.titleid, 0);
			}

			if (this.titleEndTime != undefined) {
				this.se.wi (this.titleEndTime, 1);
			}

			return this.se.Close ();
		}
	}


	export class wings_data extends Sproto.SprotoTypeBase {
		
		public lv: number; // tag 0
		public star: number; // tag 1
		public exp: number; // tag 2
		public openStatus: boolean; // tag 3
		public equipDatas: item_data[]; // tag 4
		public showlv: number; // tag 5
		public constructor(buffer: Uint8Array = null) {
			super(6, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.lv = this.de.ri ();
					break;
				case 1:
					this.star = this.de.ri ();
					break;
				case 2:
					this.exp = this.de.ri ();
					break;
				case 3:
					this.openStatus = this.de.rb ();
					break;
				case 4:
					this.equipDatas = this.de.roa(item_data);
					break;
				case 5:
					this.showlv = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.lv != undefined) {
				this.se.wi (this.lv, 0);
			}

			if (this.star != undefined) {
				this.se.wi (this.star, 1);
			}

			if (this.exp != undefined) {
				this.se.wi (this.exp, 2);
			}

			if (this.openStatus != undefined) {
				this.se.wb (this.openStatus, 3);
			}

			if (this.equipDatas != undefined) {
				this.se.woa (this.equipDatas, 4);
			}

			if (this.showlv != undefined) {
				this.se.wi (this.showlv, 5);
			}

			return this.se.Close ();
		}
	}


	export class zhuzai_data extends Sproto.SprotoTypeBase {
		
		public id: number; // tag 0
		public level: number; // tag 1
		public constructor(buffer: Uint8Array = null) {
			super(2, buffer);
		}

		protected Decode (): void {
			let tag = -1;
			while (-1 != (tag = this.de.rt())) {
				switch (tag) {
				case 0:
					this.id = this.de.ri ();
					break;
				case 1:
					this.level = this.de.ri ();
					break;
				default:
					this.de.ReadUnknowData ();
					break;
				}
			}
		}

		public EncodeStream (stream: Sproto.SprotoStream): number {
			this.se.Open (stream);

			if (this.id != undefined) {
				this.se.wi (this.id, 0);
			}

			if (this.level != undefined) {
				this.se.wi (this.level, 1);
			}

			return this.se.Close ();
		}
	}


}

